;;; vhdl-ext-tests-tree-sitter.el --- vhdl-ext ERT tree-sitter tests  -*- lexical-binding: t -*-

;; Copyright (C) 2022-2023 Gonzalo Larumbe

;; Author: Gonzalo Larumbe <gonzalomlarumbe@gmail.com>
;; URL: https://github.com/gmlarumbe/vhdl-ext

;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

;;; Commentary:
;;
;; ERT Tree-sitter tests:
;;
;;; Code:


(require 'vhdl-ext-tests-font-lock)
(require 'vhdl-ext-tests-indent)
(require 'vhdl-ext-tests-hierarchy)

(ert-deftest tree-sitter::font-lock ()
  (let ((default-directory vhdl-ext-tests-common-dir)
        (faceup-test-explain t))
    (dolist (file (directory-files vhdl-ext-tests-common-dir nil ".vhd$"))
      (should (eq t (vhdl-ext-test-font-lock-test-file file :tree-sitter))))))

(ert-deftest tree-sitter::indentation ()
  (let ((test-files vhdl-ext-tests-indent-test-files))
    (delete-directory vhdl-ext-tests-indent-dump-dir :recursive)
    (make-directory vhdl-ext-tests-indent-dump-dir :parents)
    (dolist (file test-files)
      (should (vhdl-ext-test-indent-compare file :tree-sitter)))))

(ert-deftest hierarchy::tree-sitter-hierarchy ()
  (let ((vhdl-ext-hierarchy-backend  'tree-sitter)
        (vhdl-ext-hierarchy-frontend 'hierarchy))
    (should (string= (with-temp-buffer
                       (hierarchy-print (vhdl-ext-test-hierarchy "instances.vhd") (lambda (node) node))
                       (buffer-substring-no-properties (point-min) (point-max)))
"instances
  instances.block0:I_BLOCK0_0
  instances.block0:I_BLOCK0_1
  instances.block0:I_BLOCK0_2
  instances.block1:I_BLOCK1_0
  instances.block1:I_BLOCK1_1
  instances.block1:I_BLOCK1_2
  instances.block1:I_BLOCK1_GEN
"))
    ;; Second test on tb_axi_if_converter.vhd
    (should (string= (with-temp-buffer
                       (hierarchy-print (vhdl-ext-test-hierarchy "tb_axi_if_converter.vhd") (lambda (node) node))
                       (buffer-substring-no-properties (point-min) (point-max)))
"tb_axi_if_converter
  tb_axi_if_converter.axi_if_converter:DUT
    tb_axi_if_converter.axi_if_converter:DUT.axi_lite_regs:I_AXI_LITE_REGS
    tb_axi_if_converter.axi_if_converter:DUT.input_buffer:I_INPUT_BUFFER
      tb_axi_if_converter.axi_if_converter:DUT.input_buffer:I_INPUT_BUFFER.blk_mem_gen_0:input_buffer_l
      tb_axi_if_converter.axi_if_converter:DUT.input_buffer:I_INPUT_BUFFER.blk_mem_gen_0:input_buffer_r
    tb_axi_if_converter.axi_if_converter:DUT.core_converter:I_CORE_CONVERTER_L
    tb_axi_if_converter.axi_if_converter:DUT.core_converter:I_CORE_CONVERTER_R
    tb_axi_if_converter.axi_if_converter:DUT.axi_lite_master:I_AXI_LITE_MASTER
    tb_axi_if_converter.axi_if_converter:DUT.clk_div:I_CLK_DIV
      tb_axi_if_converter.axi_if_converter:DUT.clk_div:I_CLK_DIV.BUFG:BUFG_inst
    tb_axi_if_converter.axi_if_converter:DUT.clk_sync:I_CLK_FS_SYNC
    tb_axi_if_converter.axi_if_converter:DUT.pattern_counter:I_PATTERN_COUNTER_L
    tb_axi_if_converter.axi_if_converter:DUT.pattern_counter:I_PATTERN_COUNTER_R
    tb_axi_if_converter.axi_if_converter:DUT.core_fsm:I_CORE_FSM_L
    tb_axi_if_converter.axi_if_converter:DUT.core_fsm:I_CORE_FSM_R
  tb_axi_if_converter.s_axi_model:I_SLAVEMODEL_L
  tb_axi_if_converter.s_axi_model:I_SLAVEMODEL_R
"))))

(ert-deftest hierarchy::tree-sitter-outshine ()
  (let ((vhdl-ext-hierarchy-backend  'tree-sitter)
        (vhdl-ext-hierarchy-frontend 'outshine))
    (should (equal (vhdl-ext-test-hierarchy "instances.vhd")
"-- Hierarchy generated by `vhdl-ext'

-- * instances
-- ** block0
-- ** block0
-- ** block0
-- ** block1
-- ** block1
-- ** block1
-- ** block1


-- * Buffer local variables
-- Local Variables:
-- eval: (vhdl-mode 1)
-- eval: (vhdl-ext-hierarchy-outshine-nav-mode 1)
-- End:
"))
    ;; Second test on tb_axi_if_converter.vhd
    (should (equal (vhdl-ext-test-hierarchy "tb_axi_if_converter.vhd")
"-- Hierarchy generated by `vhdl-ext'

-- * tb_axi_if_converter
-- ** axi_if_converter
-- *** axi_lite_regs
-- *** input_buffer
-- **** blk_mem_gen_0
-- **** blk_mem_gen_0
-- *** core_converter
-- *** core_converter
-- *** axi_lite_master
-- *** clk_div
-- **** BUFG
-- *** clk_sync
-- *** pattern_counter
-- *** pattern_counter
-- *** core_fsm
-- *** core_fsm
-- ** s_axi_model
-- ** s_axi_model


-- * Buffer local variables
-- Local Variables:
-- eval: (vhdl-mode 1)
-- eval: (vhdl-ext-hierarchy-outshine-nav-mode 1)
-- End:
"))))


(provide 'vhdl-ext-tests-tree-sitter)

;;; vhdl-ext-tests-tree-sitter.el ends here


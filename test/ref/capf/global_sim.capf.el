(((227 "constant AX")
  (236 238
       ("TB" "master_read_sim" "master_write_sim" "rx_data" "tdata" "RX_DATA_AMOUNT" "tvalid" "m_bfm_out_w" "m_bfm_in_w" "m_bfm_out_r" "m_bfm_in_r" "s_bfm_out_w" "s_bfm_in_w" "s_bfm_out_r" "s_bfm_in_r" "I_SLAVEMODEL_R" "s_axi_buser" "s_axi_bid" "s_axi_wuser" "s_axi_wlast" "s_axi_awuser" "s_axi_awregion" "s_axi_awqos" "s_axi_awcache" "s_axi_awlock" "s_axi_awburst" "s_axi_awsize" "s_axi_awlen" "s_axi_awid" "s_axi_ruser" "s_axi_rlast" "s_axi_rid" "s_axi_aruser" "s_axi_arregion" "s_axi_arqos" "s_axi_arcache" "s_axi_arlock" "s_axi_arburst" "s_axi_arsize" "s_axi_arlen" "s_axi_arid" "s_axi_model" "I_SLAVEMODEL_L" "DUT" "m_common_response_w_type_out" "m_common_response_w_type_in" "m_common_response_r_type_out" "m_common_response_r_type_in" "tb_axi_if_converter" "axif_master_bfm" "TO_STRING" "TEXTIO" "STD" "HWRITE" "OWRITE" "HREAD" "Char2QuadBits" "OREAD" "ok" "ne" "Char2TriBits" "ISSUE_ERROR" "m" "FIELD" "JUSTIFIED" "MVL9_to_char" "write" "WIDTH" "right" "SIDE" "mv" "lastu" "char_to_MVL9" "char_to_MVL9plus" "readOk" "GOOD" "skip_whitespace" "read" "HT" "NBSP" "left" "positive" "LINE" "MVL9plus_indexed_by_char" "MVL9_indexed_by_char" "char_indexed_by_MVL9" "MVL9plus" "CHARACTER" "error" "TO_HSTRING" "quad" "TO_OSTRING" "tri" "padded_value" "pad" "result_length" "value" "Is_X" "falling_edge" "To_UX01" "cvt_to_ux01" "To_X01Z" "cvt_to_x01z" "To_X01" "cvt_to_x01" "TO_01" "BAD_ELEMENT" "XS" "To_StdULogicVector" "To_StdLogicVector" "bv" "To_StdULogic" "To_bitvector" "sv" "BIT_VECTOR" "To_bit" "xmap" "logic_ux01_table" "logic_x01z_table" "logic_x01_table" "X01Z" "X01" "rm" "rv" "lv" "failure" "xor_table" "or_table" "not_table" "l" "and_table" "UX01" "stdlogic_1d" "resolved" "resolution_table" "result" "s" "STD_ULOGIC_VECTOR" "stdlogic_table" "STD_ULOGIC" "common_out" "mf_common_response_r_type_in" "j" "mem_select" "USER_NUM_MEM" "gen_mem_sel" "init_values" "main" "foo2" "port_bit_select" "misc" "I_BLOCK1_GEN" "GEN_BLOCK1" "I_BLOCK1_3" "I_BLOCK1_2" "I_BLOCK1_1" "block1" "I_BLOCK1_0" "Generic2" "Generic1" "Generic0" "I_BLOCK0_2" "I_BLOCK0_1" "Port2" "Port1" "Port0" "I_BLOCK0_0" "block0" "instances" "leds" "OL" "button" "NSL" "state_next" "state_reg" "reset" "clock" "REG" "state_type" "RED_YELLOW" "GREEN" "YELLOW" "RED" "traffic_light_fsm" "arch" "block_test" "R" "Q" "P" "STRUCTURE" "Delay" "S1" "ms" "PB2" "P1" "PB1" "ShortTime" "GB2" "LongTime" "GB1" "X_GATE" "BIT" "OUT3" "A3" "OUT2" "A2" "LEVEL1" "OUT1" "A1" "test_multiline_expression" "signal_in4" "signal_in3" "signal_in2" "signal_in1" "signal_out" "VALUE_4" "VALUE_3" "VALUE_2" "VALUE_1" "VALUE_0" "array_type" "indent" "C" "B" "in" "out" "A" "var" "indent_test" "foo" "work" "error_proc" "reading" "do_read" "rready_proc" "start_single_read" "wdata_proc" "wvalid_proc" "read_resp_error" "write_resp_error" "master_lite_proc" "BIT_CONV_OP_R" "BIT_CONV_OP_L" "mm2s_proc" "soft_reset_out_proc" "BIT_ENABLE" "add_out_sigH" "control_reg_signals_proc" "BIT_OUT_REG_OVERFLOW_ERR_R" "BIT_OUT_REG_UNDERFLOW_ERR_R" "BIT_OUT_REG_OVERFLOW_ERR_L" "BIT_OUT_REG_UNDERFLOW_ERR_L" "BIT_BRAM_OVERFLOW_ERR" "BIT_AXI_LITE_MASTER_ERR" "BIT_RUNNING" "IP_VERSION" "read_only_regs_proc" "BIT_WRITE_DONE" "BIT_WRITE_REQUEST" "BIT_READ_DATA_VALID" "BIT_READ_REQUEST" "BIT_SOFT_RESET" "SOFT_RESET_CYCLES" "soft_reset_cnt" "byte_index" "read_write_regs_proc" "ADDR_LSB" "loc_addr" "OPT_MEM_ADDR_BITS" "address_decoding_proc" "reg_data_out" "axi_rdata_proc" "axi_rvalid_proc" "axi_araddr" "axi_arready_proc" "axi_bvalid_proc" "axi_wready_proc" "axi_awaddr" "axi_awaddr_proc" "soft_reset_i" "axi_awready_proc" "slv_reg_rden" "slv_reg_wren" "axi_rvalid" "axi_rresp" "axi_rdata" "axi_arready" "axi_bvalid" "axi_bresp" "axi_wready" "axi_awready" "add_bit" "bitpos" "sigH" "pattern_count_rch_reg" "count_rch_reg" "pattern_count_lch_reg" "count_lch_reg" "master_lite_rd_data_reg" "master_lite_rd_add_reg" "master_lite_rd_setup_reg" "master_lite_wr_data_reg" "master_lite_wr_add_reg" "master_lite_wr_setup_reg" "mm2s_size_reg" "converter_setup_reg" "version_reg" "status_reg" "true" "control_reg" "boolean" "pattern_cnt" "pattern_cnt_proc" "request_edge_detection_proc" "bready_proc" "wlast_proc" "wdata_total_counter_proc" "wdata_counter_proc" "awvalid_proc" "awlen_proc" "strobe_burst_proc" "awaddr_proc" "burst_wr_addr_end" "wr_burst_size" "write_burst_size_calc_proc" "r_done_proc" "rdata_total_counter_proc" "rdata_counter_proc" "arlen_proc" "arvalid_proc" "araddr_proc" "burst_rd_addr_end" "rd_burst_size" "read_burst_size_calc_proc" "read_done" "rd_burst_start_active" "rd_burst_start_done" "rd_burst_size_calc_active" "rd_burst_size_calc_done" "wr_burst_start_active" "wr_burst_start_done" "wr_burst_size_calc_active" "wr_burst_size_calc_done" "rd_burst_start" "base_rd_addr" "base_wr_addr" "rd_burst_size_calc_start" "wr_burst_size_calc_start" "fsm_proc" "req_d" "req_dd" "req_pulse" "axi_wlast_i" "strobe_len" "strobe_burst" "wr_short_burst_4kb" "wr_burst_start" "burst_write_counter" "write_start" "transaction_wr_counter" "transaction_wr_size" "burst_read_counter" "read_start" "pattern_finished_i" "transaction_rd_counter" "transaction_rd_size" "axi_rready" "axi_arvalid" "axi_arlen" "burst_rd_addr" "axi_bready" "axi_wvalid" "axi_wlast" "axi_wdata" "axi_awvalid" "axi_awlen" "burst_wr_addr" "fsm_state" "READING_FROM_MEM" "READ_INITIATE" "READ_BURST_SIZE_CALC" "WRITING_TO_MEM" "WRITE_INITIATE" "WRITE_BURST_SIZE_CALC" "depth" "clogb2" "bit_depth" "mm2s_done" "s2mm_done" "S2MM_WRITE_SIZE" "mm2s_read_req_size" "s2mm_write_req_size" "mm2s_read_ptr" "s2mm_write_ptr" "address" "size" "op_type" "request" "state" "fsm_axi_full" "natural" "fsm_states" "WAIT_MM2S" "REQ_MM2S" "WAIT_S2MM" "REQ_S2MM" "IDLE" "delay_output_reg_valid_r" "delay_output_reg_valid_l" "output_reg_loading_r" "output_reg_loading_l" "bram_ptr_pos_r_proc" "bram_ptr_pos_l_proc" "last_word_out_reg_r" "load_output_reg_r" "idx_r" "read_to_output_reg_r" "last_word_out_reg_l" "load_output_reg_l" "idx_l" "read_to_output_reg_l" "axi_bram_logic_r" "axi_bram_logic_l" "bram_overflow_error_r" "bram_overflow_error_l" "idx_r_bram" "idx_l_bram" "output_reg_out_tvalid_r_d" "output_reg_out_tvalid_r" "bram_ptr_pos_r" "output_reg_out_tvalid_l_d" "output_reg_out_tvalid_l" "bram_ptr_pos_l" "bram_to_buffer_r" "bram_b_addrb" "read_bram_enb_r" "address_write_d_r" "bram_pointer_r" "input_buffer_r" "bram_to_buffer_l" "doutb" "bram_a_addrb" "addrb" "read_bram_enb_l" "enb" "rstb" "clkb" "dina" "address_write_d_l" "addra" "wea" "bram_pointer_l" "ena" "clka" "blk_mem_gen_0" "input_buffer_l" "reset_bram_r" "reset_bram_l" "ram_style" "output_reg_r" "output_reg_l" "string" "keep" "load_output_reg_rst" "OUTPUT_REG_DEFAULT_VALUE" "bram_to_buffer" "to_integer" "output_reg" "out_reg_overflow_error" "out_reg_underflow_error" "bram_pointer_position_rst" "CH_BASE_ADDRESS" "bram_pointer_position_calc" "resize" "bram_pointer_position" "read_to_output_reg_logic_rst" "read_to_output_reg_logic" "wlast" "last_word_out_reg" "idx_bram" "idx" "output_reg_out_tvalid" "load_output_reg" "start_burst_master" "bram_logic_rst" "init_bram_logic" "bram_logic" "tail" "address_write_d" "overflow_error" "stream_to_bram" "to_unsigned" "head" "bram_pointer" "read_bram_enb" "bram_read_pointer_t" "input_buffer_outputs_t" "input_buffer_inputs_t" "input_buffer_logic" "clk_fs_ff" "clk_fs_sync_proc" "I" "O" "BUFG" "BUFG_inst" "cnt" "div_proc" "vcomponents" "UNISIM" "rising_edge" "pattern_count_proc" "pattern_count_i" "count_i" "C_M_AXIL_MASTER_TARGET_BASE_ADDR" "C_M_AXIL_MASTER_DATA_WIDTH" "C_M_AXIL_MASTER_ADDR_WIDTH" "write_master_lite_read_request" "write_master_lite_write_request" "ADDR" "write_control_reg_soft_reset" "write_control_reg_system_stop" "write_control_reg_system_enable" "write_master_lite_rd_add_reg" "MASTER_LITE_RD_ADD_REG_ADDR" "write_master_lite_rd_setup_reg" "MASTER_LITE_RD_SETUP_REG_ADDR" "write_master_lite_wr_data_reg" "MASTER_LITE_WR_DATA_REG_ADDR" "write_master_lite_wr_add_reg" "MASTER_LITE_WR_ADDR_REG_ADDR" "write_master_lite_wr_setup_reg" "MASTER_LITE_WR_SETUP_REG_ADDR" "write_mm2s_size_reg" "MM2S_SIZE_REG_ADDR" "write_converter_setup_reg" "CONVERTER_SETUP_REG_ADDR" "write_control_reg" "DATA" "bfm_out_w" "bfm_in_w" "slave_write_sim" "read_master_lite_rd_data_reg" "MASTER_LITE_RD_DATA_REG_ADDR" "read_counters" "PATTERN_COUNT_RCH_REG_ADDR" "COUNT_RCH_REG_ADDR" "PATTERN_COUNT_LCH_REG_ADDR" "COUNT_LCH_REG_ADDR" "read_version_reg" "VERSION_REG_ADDR" "read_status_reg" "STATUS_REG_ADDR" "read_control_reg" "AXI_CLK_T" "CONTROL_REG_ADDR" "bfm_out_r" "bfm_in_r" "slave_read_sim" "end_test_and_stop_clock" "stop_clock" "note" "false" "global_sim" "s_common_response_w_out" "s_common_response_w_in" "s_common_response_r_out" "s_common_response_r_in" "ns" "time" "axil_master_bfm" "axil_slave_bfm" "integer" "conversion_op" "MM2S" "S2MM" "RTL" "I_CORE_FSM_R" "read_size" "bram_ptr" "buffer_size" "conv_op" "core_fsm" "I_CORE_FSM_L" "I_PATTERN_COUNTER_R" "axis_tready" "axis_tdata" "axis_tvalid" "axis_resetn" "axis_clk" "pattern_count" "count" "PATTERN" "PATTERN_COUNTER_DATA_WIDTH" "DATA_WIDTH" "pattern_counter" "I_PATTERN_COUNTER_L" "clk_fs_sync" "clk_sync" "I_CLK_FS_SYNC" "clk_fs" "clk_out" "resetn" "clk_fs_ext" "clk" "DIV_FACTOR" "clk_div" "I_CLK_DIV" "m_axi_conf_rready" "m_axi_conf_rvalid" "m_axi_conf_rresp" "m_axi_conf_rdata" "m_axi_conf_arready" "m_axi_conf_arvalid" "m_axi_conf_arprot" "m_axi_conf_araddr" "m_axi_conf_bready" "m_axi_conf_bvalid" "m_axi_conf_bresp" "m_axi_conf_wready" "m_axi_conf_wvalid" "m_axi_conf_wstrb" "m_axi_conf_wdata" "m_axi_conf_awready" "m_axi_conf_awvalid" "m_axi_conf_awprot" "m_axi_conf_awaddr" "m_axi_conf_aresetn" "m_axi_conf_aclk" "C_M_MEM_AXI_TARGET_SLAVE_BASE_ADDR" "axi_lite_master" "I_AXI_LITE_MASTER" "m_axi_rch_rready" "m_axi_rch_rvalid" "m_axi_rch_ruser" "m_axi_rch_rlast" "m_axi_rch_rresp" "m_axi_rch_rdata" "m_axi_rch_rid" "m_axi_rch_arready" "m_axi_rch_arvalid" "m_axi_rch_aruser" "m_axi_rch_arqos" "m_axi_rch_arprot" "m_axi_rch_arcache" "m_axi_rch_arlock" "m_axi_rch_arburst" "m_axi_rch_arsize" "m_axi_rch_arlen" "m_axi_rch_araddr" "m_axi_rch_arid" "m_axi_rch_bready" "m_axi_rch_bvalid" "m_axi_rch_buser" "m_axi_rch_bresp" "m_axi_rch_bid" "m_axi_rch_wready" "m_axi_rch_wvalid" "m_axi_rch_wuser" "m_axi_rch_wlast" "m_axi_rch_wstrb" "m_axi_rch_wdata" "m_axi_rch_awready" "m_axi_rch_awvalid" "m_axi_rch_awuser" "m_axi_rch_awqos" "m_axi_rch_awprot" "m_axi_rch_awcache" "m_axi_rch_awlock" "m_axi_rch_awburst" "m_axi_rch_awsize" "m_axi_rch_awlen" "m_axi_rch_awaddr" "m_axi_rch_awid" "m_axi_rch_aresetn" "m_axi_rch_aclk" "m_axis_rch_tdest" "pattern_tlast_rch" "pattern_finished_rch" "pattern_len_rch" "pattern_req_rch" "internal_error_rch" "conv_rsp_rch" "conv_req_rch" "I_CORE_CONVERTER_R" "m_axi_lch_rready" "m_axi_rready" "m_axi_lch_rvalid" "m_axi_rvalid" "m_axi_lch_ruser" "m_axi_ruser" "m_axi_lch_rlast" "m_axi_rlast" "m_axi_lch_rresp" "m_axi_rresp" "m_axi_lch_rdata" "m_axi_rdata" "m_axi_lch_rid" "m_axi_rid" "m_axi_lch_arready" "m_axi_arready" "m_axi_lch_arvalid" "m_axi_arvalid" "m_axi_lch_aruser" "m_axi_aruser" "m_axi_lch_arqos" "m_axi_arqos" "m_axi_lch_arprot" "m_axi_arprot" "m_axi_lch_arcache" "m_axi_arcache" "m_axi_lch_arlock" "m_axi_arlock" "m_axi_lch_arburst" "m_axi_arburst" "m_axi_lch_arsize" "m_axi_arsize" "m_axi_lch_arlen" "m_axi_arlen" "m_axi_lch_araddr" "m_axi_araddr" "m_axi_lch_arid" "m_axi_arid" "m_axi_lch_bready" "m_axi_bready" "m_axi_lch_bvalid" "m_axi_bvalid" "m_axi_lch_buser" "m_axi_buser" "m_axi_lch_bresp" "m_axi_bresp" "m_axi_lch_bid" "m_axi_bid" "m_axi_lch_wready" "m_axi_wready" "m_axi_lch_wvalid" "m_axi_wvalid" "m_axi_lch_wuser" "m_axi_wuser" "m_axi_lch_wlast" "m_axi_wlast" "m_axi_lch_wstrb" "m_axi_wstrb" "m_axi_lch_wdata" "m_axi_wdata" "m_axi_lch_awready" "m_axi_awready" "m_axi_lch_awvalid" "m_axi_awvalid" "m_axi_lch_awuser" "m_axi_awuser" "m_axi_lch_awqos" "m_axi_awqos" "m_axi_lch_awprot" "m_axi_awprot" "m_axi_lch_awcache" "m_axi_awcache" "m_axi_lch_awlock" "m_axi_awlock" "m_axi_lch_awburst" "m_axi_awburst" "m_axi_lch_awsize" "m_axi_awsize" "m_axi_lch_awlen" "m_axi_awlen" "m_axi_lch_awaddr" "m_axi_awaddr" "m_axi_lch_awid" "m_axi_awid" "m_axi_lch_aresetn" "m_axi_aresetn" "m_axi_lch_aclk" "m_axi_aclk" "m_axis_lch_tdest" "m_axis_tdest" "m_axis_tready" "m_axis_tlast" "m_axis_tkeep" "m_axis_tvalid" "m_axis_tdata" "m_axis_aresetn" "m_axis_aclk" "s_axis_tlast" "s_axis_tkeep" "s_axis_tvalid" "s_axis_tdata" "s_axis_tready" "s_axis_aresetn" "s_axis_aclk" "pattern_tlast_lch" "pattern_tlast" "pattern_finished_lch" "pattern_finished" "pattern_len_lch" "pattern_len" "pattern_req_lch" "pattern_req" "fb_burst_done" "fb_awlen" "fb_reduced_burst" "fb_wlast" "fb_bw_counter" "fb_wr_burst_start" "internal_error_lch" "internal_error" "conv_rsp_lch" "conv_rsp" "conv_req_lch" "conv_req" "core_converter" "I_CORE_CONVERTER_L" "m_axis_rch_inbuf_tready" "m_axis_rch_tready" "m_axis_rch_inbuf_tlast" "m_axis_rch_tlast" "m_axis_rch_inbuf_tkeep" "m_axis_rch_tkeep" "m_axis_rch_inbuf_tvalid" "m_axis_rch_tvalid" "m_axis_rch_inbuf_tdata" "m_axis_rch_tdata" "m_axis_rch_inbuf_aresetn" "m_axis_rch_aresetn" "m_axis_rch_inbuf_aclk" "m_axis_rch_aclk" "m_axis_lch_inbuf_tready" "m_axis_lch_tready" "m_axis_lch_inbuf_tlast" "m_axis_lch_tlast" "m_axis_lch_inbuf_tkeep" "m_axis_lch_tkeep" "m_axis_lch_inbuf_tvalid" "m_axis_lch_tvalid" "m_axis_lch_inbuf_tdata" "m_axis_lch_tdata" "m_axis_lch_inbuf_aresetn" "m_axis_lch_aresetn" "m_axis_lch_inbuf_aclk" "m_axis_lch_aclk" "s_axis_rch_tready" "s_axis_rch_tlast" "s_axis_rch_tkeep" "s_axis_rch_tvalid" "s_axis_rch_tdata" "s_axis_rch_aresetn" "s_axis_rch_aclk" "s_axis_lch_tready" "s_axis_lch_tlast" "s_axis_lch_tkeep" "s_axis_lch_tvalid" "s_axis_lch_tdata" "s_axis_lch_aresetn" "s_axis_lch_aclk" "bram_ptr_r" "buffer_size_r" "bram_ptr_l" "buffer_size_l" "outputs" "send_size_r" "fb_burst_done_rch" "write_done_r" "fb_reduced_burst_rch" "short_burst_r" "fb_wlast_rch" "wlast_r" "fb_bw_counter_rch" "bw_counter_r" "fb_wr_burst_start_rch" "start_burst_master_r" "send_size_l" "fb_burst_done_lch" "write_done_l" "fb_reduced_burst_lch" "short_burst_l" "fb_wlast_lch" "wlast_l" "fb_bw_counter_lch" "bw_counter_l" "fb_wr_burst_start_lch" "start_burst_master_l" "inputs" "RIGHT_CH_ST_BASE_ADDRESS" "RIGHT_CH_BASE_ADDRESS" "LEFT_CH_ST_BASE_ADDRESS" "LEFT_CH_BASE_ADDRESS" "C_M_AXI_BURST_LEN" "input_buffer" "I_INPUT_BUFFER" "s_axi_rready" "s_axi_rvalid" "s_axi_rresp" "s_axi_rdata" "s_axi_arready" "s_axi_arvalid" "s_axi_arprot" "s_axi_araddr" "s_axi_bready" "s_axi_bvalid" "s_axi_bresp" "s_axi_wready" "s_axi_wvalid" "s_axi_wstrb" "s_axi_wdata" "s_axi_awready" "s_axi_awvalid" "s_axi_awprot" "s_axi_awaddr" "s_axi_aresetn" "s_axi_aclk" "out_reg_overflow_error_r" "out_reg_underflow_error_r" "out_reg_overflow_error_l" "out_reg_underflow_error_l" "bram_overflow_error" "pattern_count_rch" "count_rch" "pattern_count_lch" "count_lch" "transaction_error" "read_data_valid" "read_data" "read_address" "read_request" "write_done" "write_address" "write_data" "write_request" "read_size_r" "read_size_l" "conv_op_rch" "conv_op_lch" "system_enable" "soft_reset" "axi_lite_regs" "I_AXI_LITE_REGS" "system_running_rch" "system_running_lch" "system_running" "fb_awlen_rch" "fb_send_size_r" "fb_awlen_lch" "fb_send_size_l" "conversion_rsp_t" "conversion_req_t" "unsigned" "axi_if_converter" "C_M_MEM_AXI_DATA_WIDTH" "C_M_MEM_AXI_ADDR_WIDTH" "C_M_AXI_RUSER_WIDTH" "C_M_AXI_ARUSER_WIDTH" "C_M_AXI_BUSER_WIDTH" "C_M_AXI_WUSER_WIDTH" "C_M_AXI_DATA_WIDTH" "C_M_AXI_AWUSER_WIDTH" "C_M_AXI_ADDR_WIDTH" "C_M_AXI_ID_WIDTH" "C_S_AXI_DATA_WIDTH" "C_S_AXI_ADDR_WIDTH" "std_logic_vector" "std_logic" "input_buffer_types" "global" "numeric_std" "std_logic_1164" "xil_defaultlib" "ieee" "HEX_WRITE" "OCTAL_WRITE" "BINARY_WRITE" "BWRITE" "HEX_READ" "OCTAL_READ" "BINARY_READ" "BREAD" "TO_HEX_STRING" "TO_OCTAL_STRING" "TO_BINARY_STRING" "TO_BSTRING" "To_SULV" "To_Std_ULogic_Vector" "To_SLV" "To_Std_Logic_Vector" "To_BV" "To_Bit_Vector" "UX01Z" "STD_LOGIC_VECTOR" "STD_LOGIC" "WRITE" "i" "READ" "b" "l, r" "r" "common_in" "state_reg, state_next" "clock, reset, button" "P, Q, R" "GB1, GB2" "A, B" "P1, P2, P3" "ARRAY_CONSTANT" "MM2S_READ_SIZE" "FS_CLK_T" "abs" "access" "after" "alias" "all" "and" "architecture" "array" "assert" "attribute" "begin" "block" "body" "buffer" "bus" "case" "component" "configuration" "constant" "disconnect" "downto" "else" "elsif" "end" "entity" "exit" "file" "for" "function" "generate" "generic" "group" "guarded" "if" "impure" "in" "inertial" "inout" "is" "label" "library" "linkage" "literal" "loop" "map" "mod" "nand" "new" "next" "nor" "not" "null" "of" "on" "open" "or" "others" "out" "package" "port" "postponed" "procedure" "process" "protected" "pure" "range" "record" "register" "reject" "rem" "report" "return" "rol" "ror" "select" "severity" "shared" "signal" "sla" "sll" "sra" "srl" "subtype" "then" "to" "transport" "type" "unaffected" "units" "until" "use" "variable" "wait" "when" "while" "with" "xnor" "xor")
       :annotation-function vhdl-ext-capf-annotation-function :company-docsig identity))
 ((348 "pr")
  (348 350
       ("TB" "master_read_sim" "master_write_sim" "rx_data" "tdata" "RX_DATA_AMOUNT" "tvalid" "m_bfm_out_w" "m_bfm_in_w" "m_bfm_out_r" "m_bfm_in_r" "s_bfm_out_w" "s_bfm_in_w" "s_bfm_out_r" "s_bfm_in_r" "I_SLAVEMODEL_R" "s_axi_buser" "s_axi_bid" "s_axi_wuser" "s_axi_wlast" "s_axi_awuser" "s_axi_awregion" "s_axi_awqos" "s_axi_awcache" "s_axi_awlock" "s_axi_awburst" "s_axi_awsize" "s_axi_awlen" "s_axi_awid" "s_axi_ruser" "s_axi_rlast" "s_axi_rid" "s_axi_aruser" "s_axi_arregion" "s_axi_arqos" "s_axi_arcache" "s_axi_arlock" "s_axi_arburst" "s_axi_arsize" "s_axi_arlen" "s_axi_arid" "s_axi_model" "I_SLAVEMODEL_L" "DUT" "m_common_response_w_type_out" "m_common_response_w_type_in" "m_common_response_r_type_out" "m_common_response_r_type_in" "tb_axi_if_converter" "axif_master_bfm" "TO_STRING" "TEXTIO" "STD" "HWRITE" "OWRITE" "HREAD" "Char2QuadBits" "OREAD" "ok" "ne" "Char2TriBits" "ISSUE_ERROR" "m" "FIELD" "JUSTIFIED" "MVL9_to_char" "write" "WIDTH" "right" "SIDE" "mv" "lastu" "char_to_MVL9" "char_to_MVL9plus" "readOk" "GOOD" "skip_whitespace" "read" "HT" "NBSP" "left" "positive" "LINE" "MVL9plus_indexed_by_char" "MVL9_indexed_by_char" "char_indexed_by_MVL9" "MVL9plus" "CHARACTER" "error" "TO_HSTRING" "quad" "TO_OSTRING" "tri" "padded_value" "pad" "result_length" "value" "Is_X" "falling_edge" "To_UX01" "cvt_to_ux01" "To_X01Z" "cvt_to_x01z" "To_X01" "cvt_to_x01" "TO_01" "BAD_ELEMENT" "XS" "To_StdULogicVector" "To_StdLogicVector" "bv" "To_StdULogic" "To_bitvector" "sv" "BIT_VECTOR" "To_bit" "xmap" "logic_ux01_table" "logic_x01z_table" "logic_x01_table" "X01Z" "X01" "rm" "rv" "lv" "failure" "xor_table" "or_table" "not_table" "l" "and_table" "UX01" "stdlogic_1d" "resolved" "resolution_table" "result" "s" "STD_ULOGIC_VECTOR" "stdlogic_table" "STD_ULOGIC" "common_out" "mf_common_response_r_type_in" "j" "mem_select" "USER_NUM_MEM" "gen_mem_sel" "init_values" "main" "foo2" "port_bit_select" "misc" "I_BLOCK1_GEN" "GEN_BLOCK1" "I_BLOCK1_3" "I_BLOCK1_2" "I_BLOCK1_1" "block1" "I_BLOCK1_0" "Generic2" "Generic1" "Generic0" "I_BLOCK0_2" "I_BLOCK0_1" "Port2" "Port1" "Port0" "I_BLOCK0_0" "block0" "instances" "leds" "OL" "button" "NSL" "state_next" "state_reg" "reset" "clock" "REG" "state_type" "RED_YELLOW" "GREEN" "YELLOW" "RED" "traffic_light_fsm" "arch" "block_test" "R" "Q" "P" "STRUCTURE" "Delay" "S1" "ms" "PB2" "P1" "PB1" "ShortTime" "GB2" "LongTime" "GB1" "X_GATE" "BIT" "OUT3" "A3" "OUT2" "A2" "LEVEL1" "OUT1" "A1" "test_multiline_expression" "signal_in4" "signal_in3" "signal_in2" "signal_in1" "signal_out" "VALUE_4" "VALUE_3" "VALUE_2" "VALUE_1" "VALUE_0" "array_type" "indent" "C" "B" "in" "out" "A" "var" "indent_test" "foo" "work" "error_proc" "reading" "do_read" "rready_proc" "start_single_read" "wdata_proc" "wvalid_proc" "read_resp_error" "write_resp_error" "master_lite_proc" "BIT_CONV_OP_R" "BIT_CONV_OP_L" "mm2s_proc" "soft_reset_out_proc" "BIT_ENABLE" "add_out_sigH" "control_reg_signals_proc" "BIT_OUT_REG_OVERFLOW_ERR_R" "BIT_OUT_REG_UNDERFLOW_ERR_R" "BIT_OUT_REG_OVERFLOW_ERR_L" "BIT_OUT_REG_UNDERFLOW_ERR_L" "BIT_BRAM_OVERFLOW_ERR" "BIT_AXI_LITE_MASTER_ERR" "BIT_RUNNING" "IP_VERSION" "read_only_regs_proc" "BIT_WRITE_DONE" "BIT_WRITE_REQUEST" "BIT_READ_DATA_VALID" "BIT_READ_REQUEST" "BIT_SOFT_RESET" "SOFT_RESET_CYCLES" "soft_reset_cnt" "byte_index" "read_write_regs_proc" "ADDR_LSB" "loc_addr" "OPT_MEM_ADDR_BITS" "address_decoding_proc" "reg_data_out" "axi_rdata_proc" "axi_rvalid_proc" "axi_araddr" "axi_arready_proc" "axi_bvalid_proc" "axi_wready_proc" "axi_awaddr" "axi_awaddr_proc" "soft_reset_i" "axi_awready_proc" "slv_reg_rden" "slv_reg_wren" "axi_rvalid" "axi_rresp" "axi_rdata" "axi_arready" "axi_bvalid" "axi_bresp" "axi_wready" "axi_awready" "add_bit" "bitpos" "sigH" "pattern_count_rch_reg" "count_rch_reg" "pattern_count_lch_reg" "count_lch_reg" "master_lite_rd_data_reg" "master_lite_rd_add_reg" "master_lite_rd_setup_reg" "master_lite_wr_data_reg" "master_lite_wr_add_reg" "master_lite_wr_setup_reg" "mm2s_size_reg" "converter_setup_reg" "version_reg" "status_reg" "true" "control_reg" "boolean" "pattern_cnt" "pattern_cnt_proc" "request_edge_detection_proc" "bready_proc" "wlast_proc" "wdata_total_counter_proc" "wdata_counter_proc" "awvalid_proc" "awlen_proc" "strobe_burst_proc" "awaddr_proc" "burst_wr_addr_end" "wr_burst_size" "write_burst_size_calc_proc" "r_done_proc" "rdata_total_counter_proc" "rdata_counter_proc" "arlen_proc" "arvalid_proc" "araddr_proc" "burst_rd_addr_end" "rd_burst_size" "read_burst_size_calc_proc" "read_done" "rd_burst_start_active" "rd_burst_start_done" "rd_burst_size_calc_active" "rd_burst_size_calc_done" "wr_burst_start_active" "wr_burst_start_done" "wr_burst_size_calc_active" "wr_burst_size_calc_done" "rd_burst_start" "base_rd_addr" "base_wr_addr" "rd_burst_size_calc_start" "wr_burst_size_calc_start" "fsm_proc" "req_d" "req_dd" "req_pulse" "axi_wlast_i" "strobe_len" "strobe_burst" "wr_short_burst_4kb" "wr_burst_start" "burst_write_counter" "write_start" "transaction_wr_counter" "transaction_wr_size" "burst_read_counter" "read_start" "pattern_finished_i" "transaction_rd_counter" "transaction_rd_size" "axi_rready" "axi_arvalid" "axi_arlen" "burst_rd_addr" "axi_bready" "axi_wvalid" "axi_wlast" "axi_wdata" "axi_awvalid" "axi_awlen" "burst_wr_addr" "fsm_state" "READING_FROM_MEM" "READ_INITIATE" "READ_BURST_SIZE_CALC" "WRITING_TO_MEM" "WRITE_INITIATE" "WRITE_BURST_SIZE_CALC" "depth" "clogb2" "bit_depth" "mm2s_done" "s2mm_done" "S2MM_WRITE_SIZE" "mm2s_read_req_size" "s2mm_write_req_size" "mm2s_read_ptr" "s2mm_write_ptr" "address" "size" "op_type" "request" "state" "fsm_axi_full" "natural" "fsm_states" "WAIT_MM2S" "REQ_MM2S" "WAIT_S2MM" "REQ_S2MM" "IDLE" "delay_output_reg_valid_r" "delay_output_reg_valid_l" "output_reg_loading_r" "output_reg_loading_l" "bram_ptr_pos_r_proc" "bram_ptr_pos_l_proc" "last_word_out_reg_r" "load_output_reg_r" "idx_r" "read_to_output_reg_r" "last_word_out_reg_l" "load_output_reg_l" "idx_l" "read_to_output_reg_l" "axi_bram_logic_r" "axi_bram_logic_l" "bram_overflow_error_r" "bram_overflow_error_l" "idx_r_bram" "idx_l_bram" "output_reg_out_tvalid_r_d" "output_reg_out_tvalid_r" "bram_ptr_pos_r" "output_reg_out_tvalid_l_d" "output_reg_out_tvalid_l" "bram_ptr_pos_l" "bram_to_buffer_r" "bram_b_addrb" "read_bram_enb_r" "address_write_d_r" "bram_pointer_r" "input_buffer_r" "bram_to_buffer_l" "doutb" "bram_a_addrb" "addrb" "read_bram_enb_l" "enb" "rstb" "clkb" "dina" "address_write_d_l" "addra" "wea" "bram_pointer_l" "ena" "clka" "blk_mem_gen_0" "input_buffer_l" "reset_bram_r" "reset_bram_l" "ram_style" "output_reg_r" "output_reg_l" "string" "keep" "load_output_reg_rst" "OUTPUT_REG_DEFAULT_VALUE" "bram_to_buffer" "to_integer" "output_reg" "out_reg_overflow_error" "out_reg_underflow_error" "bram_pointer_position_rst" "CH_BASE_ADDRESS" "bram_pointer_position_calc" "resize" "bram_pointer_position" "read_to_output_reg_logic_rst" "read_to_output_reg_logic" "wlast" "last_word_out_reg" "idx_bram" "idx" "output_reg_out_tvalid" "load_output_reg" "start_burst_master" "bram_logic_rst" "init_bram_logic" "bram_logic" "tail" "address_write_d" "overflow_error" "stream_to_bram" "to_unsigned" "head" "bram_pointer" "read_bram_enb" "bram_read_pointer_t" "input_buffer_outputs_t" "input_buffer_inputs_t" "input_buffer_logic" "clk_fs_ff" "clk_fs_sync_proc" "I" "O" "BUFG" "BUFG_inst" "cnt" "div_proc" "vcomponents" "UNISIM" "rising_edge" "pattern_count_proc" "pattern_count_i" "count_i" "C_M_AXIL_MASTER_TARGET_BASE_ADDR" "C_M_AXIL_MASTER_DATA_WIDTH" "C_M_AXIL_MASTER_ADDR_WIDTH" "write_master_lite_read_request" "write_master_lite_write_request" "ADDR" "write_control_reg_soft_reset" "write_control_reg_system_stop" "write_control_reg_system_enable" "write_master_lite_rd_add_reg" "MASTER_LITE_RD_ADD_REG_ADDR" "write_master_lite_rd_setup_reg" "MASTER_LITE_RD_SETUP_REG_ADDR" "write_master_lite_wr_data_reg" "MASTER_LITE_WR_DATA_REG_ADDR" "write_master_lite_wr_add_reg" "MASTER_LITE_WR_ADDR_REG_ADDR" "write_master_lite_wr_setup_reg" "MASTER_LITE_WR_SETUP_REG_ADDR" "write_mm2s_size_reg" "MM2S_SIZE_REG_ADDR" "write_converter_setup_reg" "CONVERTER_SETUP_REG_ADDR" "write_control_reg" "DATA" "bfm_out_w" "bfm_in_w" "slave_write_sim" "read_master_lite_rd_data_reg" "MASTER_LITE_RD_DATA_REG_ADDR" "read_counters" "PATTERN_COUNT_RCH_REG_ADDR" "COUNT_RCH_REG_ADDR" "PATTERN_COUNT_LCH_REG_ADDR" "COUNT_LCH_REG_ADDR" "read_version_reg" "VERSION_REG_ADDR" "read_status_reg" "STATUS_REG_ADDR" "read_control_reg" "AXI_CLK_T" "CONTROL_REG_ADDR" "bfm_out_r" "bfm_in_r" "slave_read_sim" "end_test_and_stop_clock" "stop_clock" "note" "false" "global_sim" "s_common_response_w_out" "s_common_response_w_in" "s_common_response_r_out" "s_common_response_r_in" "ns" "time" "axil_master_bfm" "axil_slave_bfm" "integer" "conversion_op" "MM2S" "S2MM" "RTL" "I_CORE_FSM_R" "read_size" "bram_ptr" "buffer_size" "conv_op" "core_fsm" "I_CORE_FSM_L" "I_PATTERN_COUNTER_R" "axis_tready" "axis_tdata" "axis_tvalid" "axis_resetn" "axis_clk" "pattern_count" "count" "PATTERN" "PATTERN_COUNTER_DATA_WIDTH" "DATA_WIDTH" "pattern_counter" "I_PATTERN_COUNTER_L" "clk_fs_sync" "clk_sync" "I_CLK_FS_SYNC" "clk_fs" "clk_out" "resetn" "clk_fs_ext" "clk" "DIV_FACTOR" "clk_div" "I_CLK_DIV" "m_axi_conf_rready" "m_axi_conf_rvalid" "m_axi_conf_rresp" "m_axi_conf_rdata" "m_axi_conf_arready" "m_axi_conf_arvalid" "m_axi_conf_arprot" "m_axi_conf_araddr" "m_axi_conf_bready" "m_axi_conf_bvalid" "m_axi_conf_bresp" "m_axi_conf_wready" "m_axi_conf_wvalid" "m_axi_conf_wstrb" "m_axi_conf_wdata" "m_axi_conf_awready" "m_axi_conf_awvalid" "m_axi_conf_awprot" "m_axi_conf_awaddr" "m_axi_conf_aresetn" "m_axi_conf_aclk" "C_M_MEM_AXI_TARGET_SLAVE_BASE_ADDR" "axi_lite_master" "I_AXI_LITE_MASTER" "m_axi_rch_rready" "m_axi_rch_rvalid" "m_axi_rch_ruser" "m_axi_rch_rlast" "m_axi_rch_rresp" "m_axi_rch_rdata" "m_axi_rch_rid" "m_axi_rch_arready" "m_axi_rch_arvalid" "m_axi_rch_aruser" "m_axi_rch_arqos" "m_axi_rch_arprot" "m_axi_rch_arcache" "m_axi_rch_arlock" "m_axi_rch_arburst" "m_axi_rch_arsize" "m_axi_rch_arlen" "m_axi_rch_araddr" "m_axi_rch_arid" "m_axi_rch_bready" "m_axi_rch_bvalid" "m_axi_rch_buser" "m_axi_rch_bresp" "m_axi_rch_bid" "m_axi_rch_wready" "m_axi_rch_wvalid" "m_axi_rch_wuser" "m_axi_rch_wlast" "m_axi_rch_wstrb" "m_axi_rch_wdata" "m_axi_rch_awready" "m_axi_rch_awvalid" "m_axi_rch_awuser" "m_axi_rch_awqos" "m_axi_rch_awprot" "m_axi_rch_awcache" "m_axi_rch_awlock" "m_axi_rch_awburst" "m_axi_rch_awsize" "m_axi_rch_awlen" "m_axi_rch_awaddr" "m_axi_rch_awid" "m_axi_rch_aresetn" "m_axi_rch_aclk" "m_axis_rch_tdest" "pattern_tlast_rch" "pattern_finished_rch" "pattern_len_rch" "pattern_req_rch" "internal_error_rch" "conv_rsp_rch" "conv_req_rch" "I_CORE_CONVERTER_R" "m_axi_lch_rready" "m_axi_rready" "m_axi_lch_rvalid" "m_axi_rvalid" "m_axi_lch_ruser" "m_axi_ruser" "m_axi_lch_rlast" "m_axi_rlast" "m_axi_lch_rresp" "m_axi_rresp" "m_axi_lch_rdata" "m_axi_rdata" "m_axi_lch_rid" "m_axi_rid" "m_axi_lch_arready" "m_axi_arready" "m_axi_lch_arvalid" "m_axi_arvalid" "m_axi_lch_aruser" "m_axi_aruser" "m_axi_lch_arqos" "m_axi_arqos" "m_axi_lch_arprot" "m_axi_arprot" "m_axi_lch_arcache" "m_axi_arcache" "m_axi_lch_arlock" "m_axi_arlock" "m_axi_lch_arburst" "m_axi_arburst" "m_axi_lch_arsize" "m_axi_arsize" "m_axi_lch_arlen" "m_axi_arlen" "m_axi_lch_araddr" "m_axi_araddr" "m_axi_lch_arid" "m_axi_arid" "m_axi_lch_bready" "m_axi_bready" "m_axi_lch_bvalid" "m_axi_bvalid" "m_axi_lch_buser" "m_axi_buser" "m_axi_lch_bresp" "m_axi_bresp" "m_axi_lch_bid" "m_axi_bid" "m_axi_lch_wready" "m_axi_wready" "m_axi_lch_wvalid" "m_axi_wvalid" "m_axi_lch_wuser" "m_axi_wuser" "m_axi_lch_wlast" "m_axi_wlast" "m_axi_lch_wstrb" "m_axi_wstrb" "m_axi_lch_wdata" "m_axi_wdata" "m_axi_lch_awready" "m_axi_awready" "m_axi_lch_awvalid" "m_axi_awvalid" "m_axi_lch_awuser" "m_axi_awuser" "m_axi_lch_awqos" "m_axi_awqos" "m_axi_lch_awprot" "m_axi_awprot" "m_axi_lch_awcache" "m_axi_awcache" "m_axi_lch_awlock" "m_axi_awlock" "m_axi_lch_awburst" "m_axi_awburst" "m_axi_lch_awsize" "m_axi_awsize" "m_axi_lch_awlen" "m_axi_awlen" "m_axi_lch_awaddr" "m_axi_awaddr" "m_axi_lch_awid" "m_axi_awid" "m_axi_lch_aresetn" "m_axi_aresetn" "m_axi_lch_aclk" "m_axi_aclk" "m_axis_lch_tdest" "m_axis_tdest" "m_axis_tready" "m_axis_tlast" "m_axis_tkeep" "m_axis_tvalid" "m_axis_tdata" "m_axis_aresetn" "m_axis_aclk" "s_axis_tlast" "s_axis_tkeep" "s_axis_tvalid" "s_axis_tdata" "s_axis_tready" "s_axis_aresetn" "s_axis_aclk" "pattern_tlast_lch" "pattern_tlast" "pattern_finished_lch" "pattern_finished" "pattern_len_lch" "pattern_len" "pattern_req_lch" "pattern_req" "fb_burst_done" "fb_awlen" "fb_reduced_burst" "fb_wlast" "fb_bw_counter" "fb_wr_burst_start" "internal_error_lch" "internal_error" "conv_rsp_lch" "conv_rsp" "conv_req_lch" "conv_req" "core_converter" "I_CORE_CONVERTER_L" "m_axis_rch_inbuf_tready" "m_axis_rch_tready" "m_axis_rch_inbuf_tlast" "m_axis_rch_tlast" "m_axis_rch_inbuf_tkeep" "m_axis_rch_tkeep" "m_axis_rch_inbuf_tvalid" "m_axis_rch_tvalid" "m_axis_rch_inbuf_tdata" "m_axis_rch_tdata" "m_axis_rch_inbuf_aresetn" "m_axis_rch_aresetn" "m_axis_rch_inbuf_aclk" "m_axis_rch_aclk" "m_axis_lch_inbuf_tready" "m_axis_lch_tready" "m_axis_lch_inbuf_tlast" "m_axis_lch_tlast" "m_axis_lch_inbuf_tkeep" "m_axis_lch_tkeep" "m_axis_lch_inbuf_tvalid" "m_axis_lch_tvalid" "m_axis_lch_inbuf_tdata" "m_axis_lch_tdata" "m_axis_lch_inbuf_aresetn" "m_axis_lch_aresetn" "m_axis_lch_inbuf_aclk" "m_axis_lch_aclk" "s_axis_rch_tready" "s_axis_rch_tlast" "s_axis_rch_tkeep" "s_axis_rch_tvalid" "s_axis_rch_tdata" "s_axis_rch_aresetn" "s_axis_rch_aclk" "s_axis_lch_tready" "s_axis_lch_tlast" "s_axis_lch_tkeep" "s_axis_lch_tvalid" "s_axis_lch_tdata" "s_axis_lch_aresetn" "s_axis_lch_aclk" "bram_ptr_r" "buffer_size_r" "bram_ptr_l" "buffer_size_l" "outputs" "send_size_r" "fb_burst_done_rch" "write_done_r" "fb_reduced_burst_rch" "short_burst_r" "fb_wlast_rch" "wlast_r" "fb_bw_counter_rch" "bw_counter_r" "fb_wr_burst_start_rch" "start_burst_master_r" "send_size_l" "fb_burst_done_lch" "write_done_l" "fb_reduced_burst_lch" "short_burst_l" "fb_wlast_lch" "wlast_l" "fb_bw_counter_lch" "bw_counter_l" "fb_wr_burst_start_lch" "start_burst_master_l" "inputs" "RIGHT_CH_ST_BASE_ADDRESS" "RIGHT_CH_BASE_ADDRESS" "LEFT_CH_ST_BASE_ADDRESS" "LEFT_CH_BASE_ADDRESS" "C_M_AXI_BURST_LEN" "input_buffer" "I_INPUT_BUFFER" "s_axi_rready" "s_axi_rvalid" "s_axi_rresp" "s_axi_rdata" "s_axi_arready" "s_axi_arvalid" "s_axi_arprot" "s_axi_araddr" "s_axi_bready" "s_axi_bvalid" "s_axi_bresp" "s_axi_wready" "s_axi_wvalid" "s_axi_wstrb" "s_axi_wdata" "s_axi_awready" "s_axi_awvalid" "s_axi_awprot" "s_axi_awaddr" "s_axi_aresetn" "s_axi_aclk" "out_reg_overflow_error_r" "out_reg_underflow_error_r" "out_reg_overflow_error_l" "out_reg_underflow_error_l" "bram_overflow_error" "pattern_count_rch" "count_rch" "pattern_count_lch" "count_lch" "transaction_error" "read_data_valid" "read_data" "read_address" "read_request" "write_done" "write_address" "write_data" "write_request" "read_size_r" "read_size_l" "conv_op_rch" "conv_op_lch" "system_enable" "soft_reset" "axi_lite_regs" "I_AXI_LITE_REGS" "system_running_rch" "system_running_lch" "system_running" "fb_awlen_rch" "fb_send_size_r" "fb_awlen_lch" "fb_send_size_l" "conversion_rsp_t" "conversion_req_t" "unsigned" "axi_if_converter" "C_M_MEM_AXI_DATA_WIDTH" "C_M_MEM_AXI_ADDR_WIDTH" "C_M_AXI_RUSER_WIDTH" "C_M_AXI_ARUSER_WIDTH" "C_M_AXI_BUSER_WIDTH" "C_M_AXI_WUSER_WIDTH" "C_M_AXI_DATA_WIDTH" "C_M_AXI_AWUSER_WIDTH" "C_M_AXI_ADDR_WIDTH" "C_M_AXI_ID_WIDTH" "C_S_AXI_DATA_WIDTH" "C_S_AXI_ADDR_WIDTH" "std_logic_vector" "std_logic" "input_buffer_types" "global" "numeric_std" "std_logic_1164" "xil_defaultlib" "ieee" "HEX_WRITE" "OCTAL_WRITE" "BINARY_WRITE" "BWRITE" "HEX_READ" "OCTAL_READ" "BINARY_READ" "BREAD" "TO_HEX_STRING" "TO_OCTAL_STRING" "TO_BINARY_STRING" "TO_BSTRING" "To_SULV" "To_Std_ULogic_Vector" "To_SLV" "To_Std_Logic_Vector" "To_BV" "To_Bit_Vector" "UX01Z" "STD_LOGIC_VECTOR" "STD_LOGIC" "WRITE" "i" "READ" "b" "l, r" "r" "common_in" "state_reg, state_next" "clock, reset, button" "P, Q, R" "GB1, GB2" "A, B" "P1, P2, P3" "ARRAY_CONSTANT" "MM2S_READ_SIZE" "FS_CLK_T" "abs" "access" "after" "alias" "all" "and" "architecture" "array" "assert" "attribute" "begin" "block" "body" "buffer" "bus" "case" "component" "configuration" "constant" "disconnect" "downto" "else" "elsif" "end" "entity" "exit" "file" "for" "function" "generate" "generic" "group" "guarded" "if" "impure" "in" "inertial" "inout" "is" "label" "library" "linkage" "literal" "loop" "map" "mod" "nand" "new" "next" "nor" "not" "null" "of" "on" "open" "or" "others" "out" "package" "port" "postponed" "procedure" "process" "protected" "pure" "range" "record" "register" "reject" "rem" "report" "return" "rol" "ror" "select" "severity" "shared" "signal" "sla" "sll" "sra" "srl" "subtype" "then" "to" "transport" "type" "unaffected" "units" "until" "use" "variable" "wait" "when" "while" "with" "xnor" "xor")
       :annotation-function vhdl-ext-capf-annotation-function :company-docsig identity))
 ((348 "wr")
  (348 350
       ("TB" "master_read_sim" "master_write_sim" "rx_data" "tdata" "RX_DATA_AMOUNT" "tvalid" "m_bfm_out_w" "m_bfm_in_w" "m_bfm_out_r" "m_bfm_in_r" "s_bfm_out_w" "s_bfm_in_w" "s_bfm_out_r" "s_bfm_in_r" "I_SLAVEMODEL_R" "s_axi_buser" "s_axi_bid" "s_axi_wuser" "s_axi_wlast" "s_axi_awuser" "s_axi_awregion" "s_axi_awqos" "s_axi_awcache" "s_axi_awlock" "s_axi_awburst" "s_axi_awsize" "s_axi_awlen" "s_axi_awid" "s_axi_ruser" "s_axi_rlast" "s_axi_rid" "s_axi_aruser" "s_axi_arregion" "s_axi_arqos" "s_axi_arcache" "s_axi_arlock" "s_axi_arburst" "s_axi_arsize" "s_axi_arlen" "s_axi_arid" "s_axi_model" "I_SLAVEMODEL_L" "DUT" "m_common_response_w_type_out" "m_common_response_w_type_in" "m_common_response_r_type_out" "m_common_response_r_type_in" "tb_axi_if_converter" "axif_master_bfm" "TO_STRING" "TEXTIO" "STD" "HWRITE" "OWRITE" "HREAD" "Char2QuadBits" "OREAD" "ok" "ne" "Char2TriBits" "ISSUE_ERROR" "m" "FIELD" "JUSTIFIED" "MVL9_to_char" "write" "WIDTH" "right" "SIDE" "mv" "lastu" "char_to_MVL9" "char_to_MVL9plus" "readOk" "GOOD" "skip_whitespace" "read" "HT" "NBSP" "left" "positive" "LINE" "MVL9plus_indexed_by_char" "MVL9_indexed_by_char" "char_indexed_by_MVL9" "MVL9plus" "CHARACTER" "error" "TO_HSTRING" "quad" "TO_OSTRING" "tri" "padded_value" "pad" "result_length" "value" "Is_X" "falling_edge" "To_UX01" "cvt_to_ux01" "To_X01Z" "cvt_to_x01z" "To_X01" "cvt_to_x01" "TO_01" "BAD_ELEMENT" "XS" "To_StdULogicVector" "To_StdLogicVector" "bv" "To_StdULogic" "To_bitvector" "sv" "BIT_VECTOR" "To_bit" "xmap" "logic_ux01_table" "logic_x01z_table" "logic_x01_table" "X01Z" "X01" "rm" "rv" "lv" "failure" "xor_table" "or_table" "not_table" "l" "and_table" "UX01" "stdlogic_1d" "resolved" "resolution_table" "result" "s" "STD_ULOGIC_VECTOR" "stdlogic_table" "STD_ULOGIC" "common_out" "mf_common_response_r_type_in" "j" "mem_select" "USER_NUM_MEM" "gen_mem_sel" "init_values" "main" "foo2" "port_bit_select" "misc" "I_BLOCK1_GEN" "GEN_BLOCK1" "I_BLOCK1_3" "I_BLOCK1_2" "I_BLOCK1_1" "block1" "I_BLOCK1_0" "Generic2" "Generic1" "Generic0" "I_BLOCK0_2" "I_BLOCK0_1" "Port2" "Port1" "Port0" "I_BLOCK0_0" "block0" "instances" "leds" "OL" "button" "NSL" "state_next" "state_reg" "reset" "clock" "REG" "state_type" "RED_YELLOW" "GREEN" "YELLOW" "RED" "traffic_light_fsm" "arch" "block_test" "R" "Q" "P" "STRUCTURE" "Delay" "S1" "ms" "PB2" "P1" "PB1" "ShortTime" "GB2" "LongTime" "GB1" "X_GATE" "BIT" "OUT3" "A3" "OUT2" "A2" "LEVEL1" "OUT1" "A1" "test_multiline_expression" "signal_in4" "signal_in3" "signal_in2" "signal_in1" "signal_out" "VALUE_4" "VALUE_3" "VALUE_2" "VALUE_1" "VALUE_0" "array_type" "indent" "C" "B" "in" "out" "A" "var" "indent_test" "foo" "work" "error_proc" "reading" "do_read" "rready_proc" "start_single_read" "wdata_proc" "wvalid_proc" "read_resp_error" "write_resp_error" "master_lite_proc" "BIT_CONV_OP_R" "BIT_CONV_OP_L" "mm2s_proc" "soft_reset_out_proc" "BIT_ENABLE" "add_out_sigH" "control_reg_signals_proc" "BIT_OUT_REG_OVERFLOW_ERR_R" "BIT_OUT_REG_UNDERFLOW_ERR_R" "BIT_OUT_REG_OVERFLOW_ERR_L" "BIT_OUT_REG_UNDERFLOW_ERR_L" "BIT_BRAM_OVERFLOW_ERR" "BIT_AXI_LITE_MASTER_ERR" "BIT_RUNNING" "IP_VERSION" "read_only_regs_proc" "BIT_WRITE_DONE" "BIT_WRITE_REQUEST" "BIT_READ_DATA_VALID" "BIT_READ_REQUEST" "BIT_SOFT_RESET" "SOFT_RESET_CYCLES" "soft_reset_cnt" "byte_index" "read_write_regs_proc" "ADDR_LSB" "loc_addr" "OPT_MEM_ADDR_BITS" "address_decoding_proc" "reg_data_out" "axi_rdata_proc" "axi_rvalid_proc" "axi_araddr" "axi_arready_proc" "axi_bvalid_proc" "axi_wready_proc" "axi_awaddr" "axi_awaddr_proc" "soft_reset_i" "axi_awready_proc" "slv_reg_rden" "slv_reg_wren" "axi_rvalid" "axi_rresp" "axi_rdata" "axi_arready" "axi_bvalid" "axi_bresp" "axi_wready" "axi_awready" "add_bit" "bitpos" "sigH" "pattern_count_rch_reg" "count_rch_reg" "pattern_count_lch_reg" "count_lch_reg" "master_lite_rd_data_reg" "master_lite_rd_add_reg" "master_lite_rd_setup_reg" "master_lite_wr_data_reg" "master_lite_wr_add_reg" "master_lite_wr_setup_reg" "mm2s_size_reg" "converter_setup_reg" "version_reg" "status_reg" "true" "control_reg" "boolean" "pattern_cnt" "pattern_cnt_proc" "request_edge_detection_proc" "bready_proc" "wlast_proc" "wdata_total_counter_proc" "wdata_counter_proc" "awvalid_proc" "awlen_proc" "strobe_burst_proc" "awaddr_proc" "burst_wr_addr_end" "wr_burst_size" "write_burst_size_calc_proc" "r_done_proc" "rdata_total_counter_proc" "rdata_counter_proc" "arlen_proc" "arvalid_proc" "araddr_proc" "burst_rd_addr_end" "rd_burst_size" "read_burst_size_calc_proc" "read_done" "rd_burst_start_active" "rd_burst_start_done" "rd_burst_size_calc_active" "rd_burst_size_calc_done" "wr_burst_start_active" "wr_burst_start_done" "wr_burst_size_calc_active" "wr_burst_size_calc_done" "rd_burst_start" "base_rd_addr" "base_wr_addr" "rd_burst_size_calc_start" "wr_burst_size_calc_start" "fsm_proc" "req_d" "req_dd" "req_pulse" "axi_wlast_i" "strobe_len" "strobe_burst" "wr_short_burst_4kb" "wr_burst_start" "burst_write_counter" "write_start" "transaction_wr_counter" "transaction_wr_size" "burst_read_counter" "read_start" "pattern_finished_i" "transaction_rd_counter" "transaction_rd_size" "axi_rready" "axi_arvalid" "axi_arlen" "burst_rd_addr" "axi_bready" "axi_wvalid" "axi_wlast" "axi_wdata" "axi_awvalid" "axi_awlen" "burst_wr_addr" "fsm_state" "READING_FROM_MEM" "READ_INITIATE" "READ_BURST_SIZE_CALC" "WRITING_TO_MEM" "WRITE_INITIATE" "WRITE_BURST_SIZE_CALC" "depth" "clogb2" "bit_depth" "mm2s_done" "s2mm_done" "S2MM_WRITE_SIZE" "mm2s_read_req_size" "s2mm_write_req_size" "mm2s_read_ptr" "s2mm_write_ptr" "address" "size" "op_type" "request" "state" "fsm_axi_full" "natural" "fsm_states" "WAIT_MM2S" "REQ_MM2S" "WAIT_S2MM" "REQ_S2MM" "IDLE" "delay_output_reg_valid_r" "delay_output_reg_valid_l" "output_reg_loading_r" "output_reg_loading_l" "bram_ptr_pos_r_proc" "bram_ptr_pos_l_proc" "last_word_out_reg_r" "load_output_reg_r" "idx_r" "read_to_output_reg_r" "last_word_out_reg_l" "load_output_reg_l" "idx_l" "read_to_output_reg_l" "axi_bram_logic_r" "axi_bram_logic_l" "bram_overflow_error_r" "bram_overflow_error_l" "idx_r_bram" "idx_l_bram" "output_reg_out_tvalid_r_d" "output_reg_out_tvalid_r" "bram_ptr_pos_r" "output_reg_out_tvalid_l_d" "output_reg_out_tvalid_l" "bram_ptr_pos_l" "bram_to_buffer_r" "bram_b_addrb" "read_bram_enb_r" "address_write_d_r" "bram_pointer_r" "input_buffer_r" "bram_to_buffer_l" "doutb" "bram_a_addrb" "addrb" "read_bram_enb_l" "enb" "rstb" "clkb" "dina" "address_write_d_l" "addra" "wea" "bram_pointer_l" "ena" "clka" "blk_mem_gen_0" "input_buffer_l" "reset_bram_r" "reset_bram_l" "ram_style" "output_reg_r" "output_reg_l" "string" "keep" "load_output_reg_rst" "OUTPUT_REG_DEFAULT_VALUE" "bram_to_buffer" "to_integer" "output_reg" "out_reg_overflow_error" "out_reg_underflow_error" "bram_pointer_position_rst" "CH_BASE_ADDRESS" "bram_pointer_position_calc" "resize" "bram_pointer_position" "read_to_output_reg_logic_rst" "read_to_output_reg_logic" "wlast" "last_word_out_reg" "idx_bram" "idx" "output_reg_out_tvalid" "load_output_reg" "start_burst_master" "bram_logic_rst" "init_bram_logic" "bram_logic" "tail" "address_write_d" "overflow_error" "stream_to_bram" "to_unsigned" "head" "bram_pointer" "read_bram_enb" "bram_read_pointer_t" "input_buffer_outputs_t" "input_buffer_inputs_t" "input_buffer_logic" "clk_fs_ff" "clk_fs_sync_proc" "I" "O" "BUFG" "BUFG_inst" "cnt" "div_proc" "vcomponents" "UNISIM" "rising_edge" "pattern_count_proc" "pattern_count_i" "count_i" "C_M_AXIL_MASTER_TARGET_BASE_ADDR" "C_M_AXIL_MASTER_DATA_WIDTH" "C_M_AXIL_MASTER_ADDR_WIDTH" "write_master_lite_read_request" "write_master_lite_write_request" "ADDR" "write_control_reg_soft_reset" "write_control_reg_system_stop" "write_control_reg_system_enable" "write_master_lite_rd_add_reg" "MASTER_LITE_RD_ADD_REG_ADDR" "write_master_lite_rd_setup_reg" "MASTER_LITE_RD_SETUP_REG_ADDR" "write_master_lite_wr_data_reg" "MASTER_LITE_WR_DATA_REG_ADDR" "write_master_lite_wr_add_reg" "MASTER_LITE_WR_ADDR_REG_ADDR" "write_master_lite_wr_setup_reg" "MASTER_LITE_WR_SETUP_REG_ADDR" "write_mm2s_size_reg" "MM2S_SIZE_REG_ADDR" "write_converter_setup_reg" "CONVERTER_SETUP_REG_ADDR" "write_control_reg" "DATA" "bfm_out_w" "bfm_in_w" "slave_write_sim" "read_master_lite_rd_data_reg" "MASTER_LITE_RD_DATA_REG_ADDR" "read_counters" "PATTERN_COUNT_RCH_REG_ADDR" "COUNT_RCH_REG_ADDR" "PATTERN_COUNT_LCH_REG_ADDR" "COUNT_LCH_REG_ADDR" "read_version_reg" "VERSION_REG_ADDR" "read_status_reg" "STATUS_REG_ADDR" "read_control_reg" "AXI_CLK_T" "CONTROL_REG_ADDR" "bfm_out_r" "bfm_in_r" "slave_read_sim" "end_test_and_stop_clock" "stop_clock" "note" "false" "global_sim" "s_common_response_w_out" "s_common_response_w_in" "s_common_response_r_out" "s_common_response_r_in" "ns" "time" "axil_master_bfm" "axil_slave_bfm" "integer" "conversion_op" "MM2S" "S2MM" "RTL" "I_CORE_FSM_R" "read_size" "bram_ptr" "buffer_size" "conv_op" "core_fsm" "I_CORE_FSM_L" "I_PATTERN_COUNTER_R" "axis_tready" "axis_tdata" "axis_tvalid" "axis_resetn" "axis_clk" "pattern_count" "count" "PATTERN" "PATTERN_COUNTER_DATA_WIDTH" "DATA_WIDTH" "pattern_counter" "I_PATTERN_COUNTER_L" "clk_fs_sync" "clk_sync" "I_CLK_FS_SYNC" "clk_fs" "clk_out" "resetn" "clk_fs_ext" "clk" "DIV_FACTOR" "clk_div" "I_CLK_DIV" "m_axi_conf_rready" "m_axi_conf_rvalid" "m_axi_conf_rresp" "m_axi_conf_rdata" "m_axi_conf_arready" "m_axi_conf_arvalid" "m_axi_conf_arprot" "m_axi_conf_araddr" "m_axi_conf_bready" "m_axi_conf_bvalid" "m_axi_conf_bresp" "m_axi_conf_wready" "m_axi_conf_wvalid" "m_axi_conf_wstrb" "m_axi_conf_wdata" "m_axi_conf_awready" "m_axi_conf_awvalid" "m_axi_conf_awprot" "m_axi_conf_awaddr" "m_axi_conf_aresetn" "m_axi_conf_aclk" "C_M_MEM_AXI_TARGET_SLAVE_BASE_ADDR" "axi_lite_master" "I_AXI_LITE_MASTER" "m_axi_rch_rready" "m_axi_rch_rvalid" "m_axi_rch_ruser" "m_axi_rch_rlast" "m_axi_rch_rresp" "m_axi_rch_rdata" "m_axi_rch_rid" "m_axi_rch_arready" "m_axi_rch_arvalid" "m_axi_rch_aruser" "m_axi_rch_arqos" "m_axi_rch_arprot" "m_axi_rch_arcache" "m_axi_rch_arlock" "m_axi_rch_arburst" "m_axi_rch_arsize" "m_axi_rch_arlen" "m_axi_rch_araddr" "m_axi_rch_arid" "m_axi_rch_bready" "m_axi_rch_bvalid" "m_axi_rch_buser" "m_axi_rch_bresp" "m_axi_rch_bid" "m_axi_rch_wready" "m_axi_rch_wvalid" "m_axi_rch_wuser" "m_axi_rch_wlast" "m_axi_rch_wstrb" "m_axi_rch_wdata" "m_axi_rch_awready" "m_axi_rch_awvalid" "m_axi_rch_awuser" "m_axi_rch_awqos" "m_axi_rch_awprot" "m_axi_rch_awcache" "m_axi_rch_awlock" "m_axi_rch_awburst" "m_axi_rch_awsize" "m_axi_rch_awlen" "m_axi_rch_awaddr" "m_axi_rch_awid" "m_axi_rch_aresetn" "m_axi_rch_aclk" "m_axis_rch_tdest" "pattern_tlast_rch" "pattern_finished_rch" "pattern_len_rch" "pattern_req_rch" "internal_error_rch" "conv_rsp_rch" "conv_req_rch" "I_CORE_CONVERTER_R" "m_axi_lch_rready" "m_axi_rready" "m_axi_lch_rvalid" "m_axi_rvalid" "m_axi_lch_ruser" "m_axi_ruser" "m_axi_lch_rlast" "m_axi_rlast" "m_axi_lch_rresp" "m_axi_rresp" "m_axi_lch_rdata" "m_axi_rdata" "m_axi_lch_rid" "m_axi_rid" "m_axi_lch_arready" "m_axi_arready" "m_axi_lch_arvalid" "m_axi_arvalid" "m_axi_lch_aruser" "m_axi_aruser" "m_axi_lch_arqos" "m_axi_arqos" "m_axi_lch_arprot" "m_axi_arprot" "m_axi_lch_arcache" "m_axi_arcache" "m_axi_lch_arlock" "m_axi_arlock" "m_axi_lch_arburst" "m_axi_arburst" "m_axi_lch_arsize" "m_axi_arsize" "m_axi_lch_arlen" "m_axi_arlen" "m_axi_lch_araddr" "m_axi_araddr" "m_axi_lch_arid" "m_axi_arid" "m_axi_lch_bready" "m_axi_bready" "m_axi_lch_bvalid" "m_axi_bvalid" "m_axi_lch_buser" "m_axi_buser" "m_axi_lch_bresp" "m_axi_bresp" "m_axi_lch_bid" "m_axi_bid" "m_axi_lch_wready" "m_axi_wready" "m_axi_lch_wvalid" "m_axi_wvalid" "m_axi_lch_wuser" "m_axi_wuser" "m_axi_lch_wlast" "m_axi_wlast" "m_axi_lch_wstrb" "m_axi_wstrb" "m_axi_lch_wdata" "m_axi_wdata" "m_axi_lch_awready" "m_axi_awready" "m_axi_lch_awvalid" "m_axi_awvalid" "m_axi_lch_awuser" "m_axi_awuser" "m_axi_lch_awqos" "m_axi_awqos" "m_axi_lch_awprot" "m_axi_awprot" "m_axi_lch_awcache" "m_axi_awcache" "m_axi_lch_awlock" "m_axi_awlock" "m_axi_lch_awburst" "m_axi_awburst" "m_axi_lch_awsize" "m_axi_awsize" "m_axi_lch_awlen" "m_axi_awlen" "m_axi_lch_awaddr" "m_axi_awaddr" "m_axi_lch_awid" "m_axi_awid" "m_axi_lch_aresetn" "m_axi_aresetn" "m_axi_lch_aclk" "m_axi_aclk" "m_axis_lch_tdest" "m_axis_tdest" "m_axis_tready" "m_axis_tlast" "m_axis_tkeep" "m_axis_tvalid" "m_axis_tdata" "m_axis_aresetn" "m_axis_aclk" "s_axis_tlast" "s_axis_tkeep" "s_axis_tvalid" "s_axis_tdata" "s_axis_tready" "s_axis_aresetn" "s_axis_aclk" "pattern_tlast_lch" "pattern_tlast" "pattern_finished_lch" "pattern_finished" "pattern_len_lch" "pattern_len" "pattern_req_lch" "pattern_req" "fb_burst_done" "fb_awlen" "fb_reduced_burst" "fb_wlast" "fb_bw_counter" "fb_wr_burst_start" "internal_error_lch" "internal_error" "conv_rsp_lch" "conv_rsp" "conv_req_lch" "conv_req" "core_converter" "I_CORE_CONVERTER_L" "m_axis_rch_inbuf_tready" "m_axis_rch_tready" "m_axis_rch_inbuf_tlast" "m_axis_rch_tlast" "m_axis_rch_inbuf_tkeep" "m_axis_rch_tkeep" "m_axis_rch_inbuf_tvalid" "m_axis_rch_tvalid" "m_axis_rch_inbuf_tdata" "m_axis_rch_tdata" "m_axis_rch_inbuf_aresetn" "m_axis_rch_aresetn" "m_axis_rch_inbuf_aclk" "m_axis_rch_aclk" "m_axis_lch_inbuf_tready" "m_axis_lch_tready" "m_axis_lch_inbuf_tlast" "m_axis_lch_tlast" "m_axis_lch_inbuf_tkeep" "m_axis_lch_tkeep" "m_axis_lch_inbuf_tvalid" "m_axis_lch_tvalid" "m_axis_lch_inbuf_tdata" "m_axis_lch_tdata" "m_axis_lch_inbuf_aresetn" "m_axis_lch_aresetn" "m_axis_lch_inbuf_aclk" "m_axis_lch_aclk" "s_axis_rch_tready" "s_axis_rch_tlast" "s_axis_rch_tkeep" "s_axis_rch_tvalid" "s_axis_rch_tdata" "s_axis_rch_aresetn" "s_axis_rch_aclk" "s_axis_lch_tready" "s_axis_lch_tlast" "s_axis_lch_tkeep" "s_axis_lch_tvalid" "s_axis_lch_tdata" "s_axis_lch_aresetn" "s_axis_lch_aclk" "bram_ptr_r" "buffer_size_r" "bram_ptr_l" "buffer_size_l" "outputs" "send_size_r" "fb_burst_done_rch" "write_done_r" "fb_reduced_burst_rch" "short_burst_r" "fb_wlast_rch" "wlast_r" "fb_bw_counter_rch" "bw_counter_r" "fb_wr_burst_start_rch" "start_burst_master_r" "send_size_l" "fb_burst_done_lch" "write_done_l" "fb_reduced_burst_lch" "short_burst_l" "fb_wlast_lch" "wlast_l" "fb_bw_counter_lch" "bw_counter_l" "fb_wr_burst_start_lch" "start_burst_master_l" "inputs" "RIGHT_CH_ST_BASE_ADDRESS" "RIGHT_CH_BASE_ADDRESS" "LEFT_CH_ST_BASE_ADDRESS" "LEFT_CH_BASE_ADDRESS" "C_M_AXI_BURST_LEN" "input_buffer" "I_INPUT_BUFFER" "s_axi_rready" "s_axi_rvalid" "s_axi_rresp" "s_axi_rdata" "s_axi_arready" "s_axi_arvalid" "s_axi_arprot" "s_axi_araddr" "s_axi_bready" "s_axi_bvalid" "s_axi_bresp" "s_axi_wready" "s_axi_wvalid" "s_axi_wstrb" "s_axi_wdata" "s_axi_awready" "s_axi_awvalid" "s_axi_awprot" "s_axi_awaddr" "s_axi_aresetn" "s_axi_aclk" "out_reg_overflow_error_r" "out_reg_underflow_error_r" "out_reg_overflow_error_l" "out_reg_underflow_error_l" "bram_overflow_error" "pattern_count_rch" "count_rch" "pattern_count_lch" "count_lch" "transaction_error" "read_data_valid" "read_data" "read_address" "read_request" "write_done" "write_address" "write_data" "write_request" "read_size_r" "read_size_l" "conv_op_rch" "conv_op_lch" "system_enable" "soft_reset" "axi_lite_regs" "I_AXI_LITE_REGS" "system_running_rch" "system_running_lch" "system_running" "fb_awlen_rch" "fb_send_size_r" "fb_awlen_lch" "fb_send_size_l" "conversion_rsp_t" "conversion_req_t" "unsigned" "axi_if_converter" "C_M_MEM_AXI_DATA_WIDTH" "C_M_MEM_AXI_ADDR_WIDTH" "C_M_AXI_RUSER_WIDTH" "C_M_AXI_ARUSER_WIDTH" "C_M_AXI_BUSER_WIDTH" "C_M_AXI_WUSER_WIDTH" "C_M_AXI_DATA_WIDTH" "C_M_AXI_AWUSER_WIDTH" "C_M_AXI_ADDR_WIDTH" "C_M_AXI_ID_WIDTH" "C_S_AXI_DATA_WIDTH" "C_S_AXI_ADDR_WIDTH" "std_logic_vector" "std_logic" "input_buffer_types" "global" "numeric_std" "std_logic_1164" "xil_defaultlib" "ieee" "HEX_WRITE" "OCTAL_WRITE" "BINARY_WRITE" "BWRITE" "HEX_READ" "OCTAL_READ" "BINARY_READ" "BREAD" "TO_HEX_STRING" "TO_OCTAL_STRING" "TO_BINARY_STRING" "TO_BSTRING" "To_SULV" "To_Std_ULogic_Vector" "To_SLV" "To_Std_Logic_Vector" "To_BV" "To_Bit_Vector" "UX01Z" "STD_LOGIC_VECTOR" "STD_LOGIC" "WRITE" "i" "READ" "b" "l, r" "r" "common_in" "state_reg, state_next" "clock, reset, button" "P, Q, R" "GB1, GB2" "A, B" "P1, P2, P3" "ARRAY_CONSTANT" "MM2S_READ_SIZE" "FS_CLK_T" "abs" "access" "after" "alias" "all" "and" "architecture" "array" "assert" "attribute" "begin" "block" "body" "buffer" "bus" "case" "component" "configuration" "constant" "disconnect" "downto" "else" "elsif" "end" "entity" "exit" "file" "for" "function" "generate" "generic" "group" "guarded" "if" "impure" "in" "inertial" "inout" "is" "label" "library" "linkage" "literal" "loop" "map" "mod" "nand" "new" "next" "nor" "not" "null" "of" "on" "open" "or" "others" "out" "package" "port" "postponed" "procedure" "process" "protected" "pure" "range" "record" "register" "reject" "rem" "report" "return" "rol" "ror" "select" "severity" "shared" "signal" "sla" "sll" "sra" "srl" "subtype" "then" "to" "transport" "type" "unaffected" "units" "until" "use" "variable" "wait" "when" "while" "with" "xnor" "xor")
       :annotation-function vhdl-ext-capf-annotation-function :company-docsig identity))
 ((point-max "en")
  (12218 12220
	 ("TB" "master_read_sim" "master_write_sim" "rx_data" "tdata" "RX_DATA_AMOUNT" "tvalid" "m_bfm_out_w" "m_bfm_in_w" "m_bfm_out_r" "m_bfm_in_r" "s_bfm_out_w" "s_bfm_in_w" "s_bfm_out_r" "s_bfm_in_r" "I_SLAVEMODEL_R" "s_axi_buser" "s_axi_bid" "s_axi_wuser" "s_axi_wlast" "s_axi_awuser" "s_axi_awregion" "s_axi_awqos" "s_axi_awcache" "s_axi_awlock" "s_axi_awburst" "s_axi_awsize" "s_axi_awlen" "s_axi_awid" "s_axi_ruser" "s_axi_rlast" "s_axi_rid" "s_axi_aruser" "s_axi_arregion" "s_axi_arqos" "s_axi_arcache" "s_axi_arlock" "s_axi_arburst" "s_axi_arsize" "s_axi_arlen" "s_axi_arid" "s_axi_model" "I_SLAVEMODEL_L" "DUT" "m_common_response_w_type_out" "m_common_response_w_type_in" "m_common_response_r_type_out" "m_common_response_r_type_in" "tb_axi_if_converter" "axif_master_bfm" "TO_STRING" "TEXTIO" "STD" "HWRITE" "OWRITE" "HREAD" "Char2QuadBits" "OREAD" "ok" "ne" "Char2TriBits" "ISSUE_ERROR" "m" "FIELD" "JUSTIFIED" "MVL9_to_char" "write" "WIDTH" "right" "SIDE" "mv" "lastu" "char_to_MVL9" "char_to_MVL9plus" "readOk" "GOOD" "skip_whitespace" "read" "HT" "NBSP" "left" "positive" "LINE" "MVL9plus_indexed_by_char" "MVL9_indexed_by_char" "char_indexed_by_MVL9" "MVL9plus" "CHARACTER" "error" "TO_HSTRING" "quad" "TO_OSTRING" "tri" "padded_value" "pad" "result_length" "value" "Is_X" "falling_edge" "To_UX01" "cvt_to_ux01" "To_X01Z" "cvt_to_x01z" "To_X01" "cvt_to_x01" "TO_01" "BAD_ELEMENT" "XS" "To_StdULogicVector" "To_StdLogicVector" "bv" "To_StdULogic" "To_bitvector" "sv" "BIT_VECTOR" "To_bit" "xmap" "logic_ux01_table" "logic_x01z_table" "logic_x01_table" "X01Z" "X01" "rm" "rv" "lv" "failure" "xor_table" "or_table" "not_table" "l" "and_table" "UX01" "stdlogic_1d" "resolved" "resolution_table" "result" "s" "STD_ULOGIC_VECTOR" "stdlogic_table" "STD_ULOGIC" "common_out" "mf_common_response_r_type_in" "j" "mem_select" "USER_NUM_MEM" "gen_mem_sel" "init_values" "main" "foo2" "port_bit_select" "misc" "I_BLOCK1_GEN" "GEN_BLOCK1" "I_BLOCK1_3" "I_BLOCK1_2" "I_BLOCK1_1" "block1" "I_BLOCK1_0" "Generic2" "Generic1" "Generic0" "I_BLOCK0_2" "I_BLOCK0_1" "Port2" "Port1" "Port0" "I_BLOCK0_0" "block0" "instances" "leds" "OL" "button" "NSL" "state_next" "state_reg" "reset" "clock" "REG" "state_type" "RED_YELLOW" "GREEN" "YELLOW" "RED" "traffic_light_fsm" "arch" "block_test" "R" "Q" "P" "STRUCTURE" "Delay" "S1" "ms" "PB2" "P1" "PB1" "ShortTime" "GB2" "LongTime" "GB1" "X_GATE" "BIT" "OUT3" "A3" "OUT2" "A2" "LEVEL1" "OUT1" "A1" "test_multiline_expression" "signal_in4" "signal_in3" "signal_in2" "signal_in1" "signal_out" "VALUE_4" "VALUE_3" "VALUE_2" "VALUE_1" "VALUE_0" "array_type" "indent" "C" "B" "in" "out" "A" "var" "indent_test" "foo" "work" "error_proc" "reading" "do_read" "rready_proc" "start_single_read" "wdata_proc" "wvalid_proc" "read_resp_error" "write_resp_error" "master_lite_proc" "BIT_CONV_OP_R" "BIT_CONV_OP_L" "mm2s_proc" "soft_reset_out_proc" "BIT_ENABLE" "add_out_sigH" "control_reg_signals_proc" "BIT_OUT_REG_OVERFLOW_ERR_R" "BIT_OUT_REG_UNDERFLOW_ERR_R" "BIT_OUT_REG_OVERFLOW_ERR_L" "BIT_OUT_REG_UNDERFLOW_ERR_L" "BIT_BRAM_OVERFLOW_ERR" "BIT_AXI_LITE_MASTER_ERR" "BIT_RUNNING" "IP_VERSION" "read_only_regs_proc" "BIT_WRITE_DONE" "BIT_WRITE_REQUEST" "BIT_READ_DATA_VALID" "BIT_READ_REQUEST" "BIT_SOFT_RESET" "SOFT_RESET_CYCLES" "soft_reset_cnt" "byte_index" "read_write_regs_proc" "ADDR_LSB" "loc_addr" "OPT_MEM_ADDR_BITS" "address_decoding_proc" "reg_data_out" "axi_rdata_proc" "axi_rvalid_proc" "axi_araddr" "axi_arready_proc" "axi_bvalid_proc" "axi_wready_proc" "axi_awaddr" "axi_awaddr_proc" "soft_reset_i" "axi_awready_proc" "slv_reg_rden" "slv_reg_wren" "axi_rvalid" "axi_rresp" "axi_rdata" "axi_arready" "axi_bvalid" "axi_bresp" "axi_wready" "axi_awready" "add_bit" "bitpos" "sigH" "pattern_count_rch_reg" "count_rch_reg" "pattern_count_lch_reg" "count_lch_reg" "master_lite_rd_data_reg" "master_lite_rd_add_reg" "master_lite_rd_setup_reg" "master_lite_wr_data_reg" "master_lite_wr_add_reg" "master_lite_wr_setup_reg" "mm2s_size_reg" "converter_setup_reg" "version_reg" "status_reg" "true" "control_reg" "boolean" "pattern_cnt" "pattern_cnt_proc" "request_edge_detection_proc" "bready_proc" "wlast_proc" "wdata_total_counter_proc" "wdata_counter_proc" "awvalid_proc" "awlen_proc" "strobe_burst_proc" "awaddr_proc" "burst_wr_addr_end" "wr_burst_size" "write_burst_size_calc_proc" "r_done_proc" "rdata_total_counter_proc" "rdata_counter_proc" "arlen_proc" "arvalid_proc" "araddr_proc" "burst_rd_addr_end" "rd_burst_size" "read_burst_size_calc_proc" "read_done" "rd_burst_start_active" "rd_burst_start_done" "rd_burst_size_calc_active" "rd_burst_size_calc_done" "wr_burst_start_active" "wr_burst_start_done" "wr_burst_size_calc_active" "wr_burst_size_calc_done" "rd_burst_start" "base_rd_addr" "base_wr_addr" "rd_burst_size_calc_start" "wr_burst_size_calc_start" "fsm_proc" "req_d" "req_dd" "req_pulse" "axi_wlast_i" "strobe_len" "strobe_burst" "wr_short_burst_4kb" "wr_burst_start" "burst_write_counter" "write_start" "transaction_wr_counter" "transaction_wr_size" "burst_read_counter" "read_start" "pattern_finished_i" "transaction_rd_counter" "transaction_rd_size" "axi_rready" "axi_arvalid" "axi_arlen" "burst_rd_addr" "axi_bready" "axi_wvalid" "axi_wlast" "axi_wdata" "axi_awvalid" "axi_awlen" "burst_wr_addr" "fsm_state" "READING_FROM_MEM" "READ_INITIATE" "READ_BURST_SIZE_CALC" "WRITING_TO_MEM" "WRITE_INITIATE" "WRITE_BURST_SIZE_CALC" "depth" "clogb2" "bit_depth" "mm2s_done" "s2mm_done" "S2MM_WRITE_SIZE" "mm2s_read_req_size" "s2mm_write_req_size" "mm2s_read_ptr" "s2mm_write_ptr" "address" "size" "op_type" "request" "state" "fsm_axi_full" "natural" "fsm_states" "WAIT_MM2S" "REQ_MM2S" "WAIT_S2MM" "REQ_S2MM" "IDLE" "delay_output_reg_valid_r" "delay_output_reg_valid_l" "output_reg_loading_r" "output_reg_loading_l" "bram_ptr_pos_r_proc" "bram_ptr_pos_l_proc" "last_word_out_reg_r" "load_output_reg_r" "idx_r" "read_to_output_reg_r" "last_word_out_reg_l" "load_output_reg_l" "idx_l" "read_to_output_reg_l" "axi_bram_logic_r" "axi_bram_logic_l" "bram_overflow_error_r" "bram_overflow_error_l" "idx_r_bram" "idx_l_bram" "output_reg_out_tvalid_r_d" "output_reg_out_tvalid_r" "bram_ptr_pos_r" "output_reg_out_tvalid_l_d" "output_reg_out_tvalid_l" "bram_ptr_pos_l" "bram_to_buffer_r" "bram_b_addrb" "read_bram_enb_r" "address_write_d_r" "bram_pointer_r" "input_buffer_r" "bram_to_buffer_l" "doutb" "bram_a_addrb" "addrb" "read_bram_enb_l" "enb" "rstb" "clkb" "dina" "address_write_d_l" "addra" "wea" "bram_pointer_l" "ena" "clka" "blk_mem_gen_0" "input_buffer_l" "reset_bram_r" "reset_bram_l" "ram_style" "output_reg_r" "output_reg_l" "string" "keep" "load_output_reg_rst" "OUTPUT_REG_DEFAULT_VALUE" "bram_to_buffer" "to_integer" "output_reg" "out_reg_overflow_error" "out_reg_underflow_error" "bram_pointer_position_rst" "CH_BASE_ADDRESS" "bram_pointer_position_calc" "resize" "bram_pointer_position" "read_to_output_reg_logic_rst" "read_to_output_reg_logic" "wlast" "last_word_out_reg" "idx_bram" "idx" "output_reg_out_tvalid" "load_output_reg" "start_burst_master" "bram_logic_rst" "init_bram_logic" "bram_logic" "tail" "address_write_d" "overflow_error" "stream_to_bram" "to_unsigned" "head" "bram_pointer" "read_bram_enb" "bram_read_pointer_t" "input_buffer_outputs_t" "input_buffer_inputs_t" "input_buffer_logic" "clk_fs_ff" "clk_fs_sync_proc" "I" "O" "BUFG" "BUFG_inst" "cnt" "div_proc" "vcomponents" "UNISIM" "rising_edge" "pattern_count_proc" "pattern_count_i" "count_i" "C_M_AXIL_MASTER_TARGET_BASE_ADDR" "C_M_AXIL_MASTER_DATA_WIDTH" "C_M_AXIL_MASTER_ADDR_WIDTH" "write_master_lite_read_request" "write_master_lite_write_request" "ADDR" "write_control_reg_soft_reset" "write_control_reg_system_stop" "write_control_reg_system_enable" "write_master_lite_rd_add_reg" "MASTER_LITE_RD_ADD_REG_ADDR" "write_master_lite_rd_setup_reg" "MASTER_LITE_RD_SETUP_REG_ADDR" "write_master_lite_wr_data_reg" "MASTER_LITE_WR_DATA_REG_ADDR" "write_master_lite_wr_add_reg" "MASTER_LITE_WR_ADDR_REG_ADDR" "write_master_lite_wr_setup_reg" "MASTER_LITE_WR_SETUP_REG_ADDR" "write_mm2s_size_reg" "MM2S_SIZE_REG_ADDR" "write_converter_setup_reg" "CONVERTER_SETUP_REG_ADDR" "write_control_reg" "DATA" "bfm_out_w" "bfm_in_w" "slave_write_sim" "read_master_lite_rd_data_reg" "MASTER_LITE_RD_DATA_REG_ADDR" "read_counters" "PATTERN_COUNT_RCH_REG_ADDR" "COUNT_RCH_REG_ADDR" "PATTERN_COUNT_LCH_REG_ADDR" "COUNT_LCH_REG_ADDR" "read_version_reg" "VERSION_REG_ADDR" "read_status_reg" "STATUS_REG_ADDR" "read_control_reg" "AXI_CLK_T" "CONTROL_REG_ADDR" "bfm_out_r" "bfm_in_r" "slave_read_sim" "end_test_and_stop_clock" "stop_clock" "note" "false" "global_sim" "s_common_response_w_out" "s_common_response_w_in" "s_common_response_r_out" "s_common_response_r_in" "ns" "time" "axil_master_bfm" "axil_slave_bfm" "integer" "conversion_op" "MM2S" "S2MM" "RTL" "I_CORE_FSM_R" "read_size" "bram_ptr" "buffer_size" "conv_op" "core_fsm" "I_CORE_FSM_L" "I_PATTERN_COUNTER_R" "axis_tready" "axis_tdata" "axis_tvalid" "axis_resetn" "axis_clk" "pattern_count" "count" "PATTERN" "PATTERN_COUNTER_DATA_WIDTH" "DATA_WIDTH" "pattern_counter" "I_PATTERN_COUNTER_L" "clk_fs_sync" "clk_sync" "I_CLK_FS_SYNC" "clk_fs" "clk_out" "resetn" "clk_fs_ext" "clk" "DIV_FACTOR" "clk_div" "I_CLK_DIV" "m_axi_conf_rready" "m_axi_conf_rvalid" "m_axi_conf_rresp" "m_axi_conf_rdata" "m_axi_conf_arready" "m_axi_conf_arvalid" "m_axi_conf_arprot" "m_axi_conf_araddr" "m_axi_conf_bready" "m_axi_conf_bvalid" "m_axi_conf_bresp" "m_axi_conf_wready" "m_axi_conf_wvalid" "m_axi_conf_wstrb" "m_axi_conf_wdata" "m_axi_conf_awready" "m_axi_conf_awvalid" "m_axi_conf_awprot" "m_axi_conf_awaddr" "m_axi_conf_aresetn" "m_axi_conf_aclk" "C_M_MEM_AXI_TARGET_SLAVE_BASE_ADDR" "axi_lite_master" "I_AXI_LITE_MASTER" "m_axi_rch_rready" "m_axi_rch_rvalid" "m_axi_rch_ruser" "m_axi_rch_rlast" "m_axi_rch_rresp" "m_axi_rch_rdata" "m_axi_rch_rid" "m_axi_rch_arready" "m_axi_rch_arvalid" "m_axi_rch_aruser" "m_axi_rch_arqos" "m_axi_rch_arprot" "m_axi_rch_arcache" "m_axi_rch_arlock" "m_axi_rch_arburst" "m_axi_rch_arsize" "m_axi_rch_arlen" "m_axi_rch_araddr" "m_axi_rch_arid" "m_axi_rch_bready" "m_axi_rch_bvalid" "m_axi_rch_buser" "m_axi_rch_bresp" "m_axi_rch_bid" "m_axi_rch_wready" "m_axi_rch_wvalid" "m_axi_rch_wuser" "m_axi_rch_wlast" "m_axi_rch_wstrb" "m_axi_rch_wdata" "m_axi_rch_awready" "m_axi_rch_awvalid" "m_axi_rch_awuser" "m_axi_rch_awqos" "m_axi_rch_awprot" "m_axi_rch_awcache" "m_axi_rch_awlock" "m_axi_rch_awburst" "m_axi_rch_awsize" "m_axi_rch_awlen" "m_axi_rch_awaddr" "m_axi_rch_awid" "m_axi_rch_aresetn" "m_axi_rch_aclk" "m_axis_rch_tdest" "pattern_tlast_rch" "pattern_finished_rch" "pattern_len_rch" "pattern_req_rch" "internal_error_rch" "conv_rsp_rch" "conv_req_rch" "I_CORE_CONVERTER_R" "m_axi_lch_rready" "m_axi_rready" "m_axi_lch_rvalid" "m_axi_rvalid" "m_axi_lch_ruser" "m_axi_ruser" "m_axi_lch_rlast" "m_axi_rlast" "m_axi_lch_rresp" "m_axi_rresp" "m_axi_lch_rdata" "m_axi_rdata" "m_axi_lch_rid" "m_axi_rid" "m_axi_lch_arready" "m_axi_arready" "m_axi_lch_arvalid" "m_axi_arvalid" "m_axi_lch_aruser" "m_axi_aruser" "m_axi_lch_arqos" "m_axi_arqos" "m_axi_lch_arprot" "m_axi_arprot" "m_axi_lch_arcache" "m_axi_arcache" "m_axi_lch_arlock" "m_axi_arlock" "m_axi_lch_arburst" "m_axi_arburst" "m_axi_lch_arsize" "m_axi_arsize" "m_axi_lch_arlen" "m_axi_arlen" "m_axi_lch_araddr" "m_axi_araddr" "m_axi_lch_arid" "m_axi_arid" "m_axi_lch_bready" "m_axi_bready" "m_axi_lch_bvalid" "m_axi_bvalid" "m_axi_lch_buser" "m_axi_buser" "m_axi_lch_bresp" "m_axi_bresp" "m_axi_lch_bid" "m_axi_bid" "m_axi_lch_wready" "m_axi_wready" "m_axi_lch_wvalid" "m_axi_wvalid" "m_axi_lch_wuser" "m_axi_wuser" "m_axi_lch_wlast" "m_axi_wlast" "m_axi_lch_wstrb" "m_axi_wstrb" "m_axi_lch_wdata" "m_axi_wdata" "m_axi_lch_awready" "m_axi_awready" "m_axi_lch_awvalid" "m_axi_awvalid" "m_axi_lch_awuser" "m_axi_awuser" "m_axi_lch_awqos" "m_axi_awqos" "m_axi_lch_awprot" "m_axi_awprot" "m_axi_lch_awcache" "m_axi_awcache" "m_axi_lch_awlock" "m_axi_awlock" "m_axi_lch_awburst" "m_axi_awburst" "m_axi_lch_awsize" "m_axi_awsize" "m_axi_lch_awlen" "m_axi_awlen" "m_axi_lch_awaddr" "m_axi_awaddr" "m_axi_lch_awid" "m_axi_awid" "m_axi_lch_aresetn" "m_axi_aresetn" "m_axi_lch_aclk" "m_axi_aclk" "m_axis_lch_tdest" "m_axis_tdest" "m_axis_tready" "m_axis_tlast" "m_axis_tkeep" "m_axis_tvalid" "m_axis_tdata" "m_axis_aresetn" "m_axis_aclk" "s_axis_tlast" "s_axis_tkeep" "s_axis_tvalid" "s_axis_tdata" "s_axis_tready" "s_axis_aresetn" "s_axis_aclk" "pattern_tlast_lch" "pattern_tlast" "pattern_finished_lch" "pattern_finished" "pattern_len_lch" "pattern_len" "pattern_req_lch" "pattern_req" "fb_burst_done" "fb_awlen" "fb_reduced_burst" "fb_wlast" "fb_bw_counter" "fb_wr_burst_start" "internal_error_lch" "internal_error" "conv_rsp_lch" "conv_rsp" "conv_req_lch" "conv_req" "core_converter" "I_CORE_CONVERTER_L" "m_axis_rch_inbuf_tready" "m_axis_rch_tready" "m_axis_rch_inbuf_tlast" "m_axis_rch_tlast" "m_axis_rch_inbuf_tkeep" "m_axis_rch_tkeep" "m_axis_rch_inbuf_tvalid" "m_axis_rch_tvalid" "m_axis_rch_inbuf_tdata" "m_axis_rch_tdata" "m_axis_rch_inbuf_aresetn" "m_axis_rch_aresetn" "m_axis_rch_inbuf_aclk" "m_axis_rch_aclk" "m_axis_lch_inbuf_tready" "m_axis_lch_tready" "m_axis_lch_inbuf_tlast" "m_axis_lch_tlast" "m_axis_lch_inbuf_tkeep" "m_axis_lch_tkeep" "m_axis_lch_inbuf_tvalid" "m_axis_lch_tvalid" "m_axis_lch_inbuf_tdata" "m_axis_lch_tdata" "m_axis_lch_inbuf_aresetn" "m_axis_lch_aresetn" "m_axis_lch_inbuf_aclk" "m_axis_lch_aclk" "s_axis_rch_tready" "s_axis_rch_tlast" "s_axis_rch_tkeep" "s_axis_rch_tvalid" "s_axis_rch_tdata" "s_axis_rch_aresetn" "s_axis_rch_aclk" "s_axis_lch_tready" "s_axis_lch_tlast" "s_axis_lch_tkeep" "s_axis_lch_tvalid" "s_axis_lch_tdata" "s_axis_lch_aresetn" "s_axis_lch_aclk" "bram_ptr_r" "buffer_size_r" "bram_ptr_l" "buffer_size_l" "outputs" "send_size_r" "fb_burst_done_rch" "write_done_r" "fb_reduced_burst_rch" "short_burst_r" "fb_wlast_rch" "wlast_r" "fb_bw_counter_rch" "bw_counter_r" "fb_wr_burst_start_rch" "start_burst_master_r" "send_size_l" "fb_burst_done_lch" "write_done_l" "fb_reduced_burst_lch" "short_burst_l" "fb_wlast_lch" "wlast_l" "fb_bw_counter_lch" "bw_counter_l" "fb_wr_burst_start_lch" "start_burst_master_l" "inputs" "RIGHT_CH_ST_BASE_ADDRESS" "RIGHT_CH_BASE_ADDRESS" "LEFT_CH_ST_BASE_ADDRESS" "LEFT_CH_BASE_ADDRESS" "C_M_AXI_BURST_LEN" "input_buffer" "I_INPUT_BUFFER" "s_axi_rready" "s_axi_rvalid" "s_axi_rresp" "s_axi_rdata" "s_axi_arready" "s_axi_arvalid" "s_axi_arprot" "s_axi_araddr" "s_axi_bready" "s_axi_bvalid" "s_axi_bresp" "s_axi_wready" "s_axi_wvalid" "s_axi_wstrb" "s_axi_wdata" "s_axi_awready" "s_axi_awvalid" "s_axi_awprot" "s_axi_awaddr" "s_axi_aresetn" "s_axi_aclk" "out_reg_overflow_error_r" "out_reg_underflow_error_r" "out_reg_overflow_error_l" "out_reg_underflow_error_l" "bram_overflow_error" "pattern_count_rch" "count_rch" "pattern_count_lch" "count_lch" "transaction_error" "read_data_valid" "read_data" "read_address" "read_request" "write_done" "write_address" "write_data" "write_request" "read_size_r" "read_size_l" "conv_op_rch" "conv_op_lch" "system_enable" "soft_reset" "axi_lite_regs" "I_AXI_LITE_REGS" "system_running_rch" "system_running_lch" "system_running" "fb_awlen_rch" "fb_send_size_r" "fb_awlen_lch" "fb_send_size_l" "conversion_rsp_t" "conversion_req_t" "unsigned" "axi_if_converter" "C_M_MEM_AXI_DATA_WIDTH" "C_M_MEM_AXI_ADDR_WIDTH" "C_M_AXI_RUSER_WIDTH" "C_M_AXI_ARUSER_WIDTH" "C_M_AXI_BUSER_WIDTH" "C_M_AXI_WUSER_WIDTH" "C_M_AXI_DATA_WIDTH" "C_M_AXI_AWUSER_WIDTH" "C_M_AXI_ADDR_WIDTH" "C_M_AXI_ID_WIDTH" "C_S_AXI_DATA_WIDTH" "C_S_AXI_ADDR_WIDTH" "std_logic_vector" "std_logic" "input_buffer_types" "global" "numeric_std" "std_logic_1164" "xil_defaultlib" "ieee" "HEX_WRITE" "OCTAL_WRITE" "BINARY_WRITE" "BWRITE" "HEX_READ" "OCTAL_READ" "BINARY_READ" "BREAD" "TO_HEX_STRING" "TO_OCTAL_STRING" "TO_BINARY_STRING" "TO_BSTRING" "To_SULV" "To_Std_ULogic_Vector" "To_SLV" "To_Std_Logic_Vector" "To_BV" "To_Bit_Vector" "UX01Z" "STD_LOGIC_VECTOR" "STD_LOGIC" "WRITE" "i" "READ" "b" "l, r" "r" "common_in" "state_reg, state_next" "clock, reset, button" "P, Q, R" "GB1, GB2" "A, B" "P1, P2, P3" "ARRAY_CONSTANT" "MM2S_READ_SIZE" "FS_CLK_T" "abs" "access" "after" "alias" "all" "and" "architecture" "array" "assert" "attribute" "begin" "block" "body" "buffer" "bus" "case" "component" "configuration" "constant" "disconnect" "downto" "else" "elsif" "end" "entity" "exit" "file" "for" "function" "generate" "generic" "group" "guarded" "if" "impure" "in" "inertial" "inout" "is" "label" "library" "linkage" "literal" "loop" "map" "mod" "nand" "new" "next" "nor" "not" "null" "of" "on" "open" "or" "others" "out" "package" "port" "postponed" "procedure" "process" "protected" "pure" "range" "record" "register" "reject" "rem" "report" "return" "rol" "ror" "select" "severity" "shared" "signal" "sla" "sll" "sra" "srl" "subtype" "then" "to" "transport" "type" "unaffected" "units" "until" "use" "variable" "wait" "when" "while" "with" "xnor" "xor")
	 :annotation-function vhdl-ext-capf-annotation-function :company-docsig identity)))
